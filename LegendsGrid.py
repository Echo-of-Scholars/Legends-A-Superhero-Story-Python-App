# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'LegendsGrid.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys, os
here = ''

try:
    here = os.path.abspath(os.path.dirname(__file__))
except NameError:  # We are the main py2exe script, not a module
    here = os.path.dirname(os.path.abspath(sys.argv[0]))

parent = os.path.abspath(os.path.dirname(here))
sys.path.append(here)

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtWidgets import QStyleFactory
from PyQt5.QtGui import *
#from PyQt5.QtCore import *



class Ui_MainWindow(object):


    def setupUi(self, MainWindow):  #Weather Control ends A tier, Unique Power ends B tier
        power_names = ['Absorption', 'Adaption', 'Animal Powers', 'A – Charisma', 'A – Agility', 'A – Stamina',
                       'A – Intelligence', 'A – Senses', 'A – Speed', 'A – Strength', 'Clairvoyance', 'Constructs',
                       'Dimensional Travel', 'Earth Control', 'Gravity Control', 'Immortality', 'Invulnerability',
                       'Magic Spells', 'Mimic', 'Mind Control', 'Resurrection', 'Shape Shifting', 'Time Manipulation',
                       'Transmutation', 'Weather Control', 'Animal Control', 'Armour', 'Astral Projection',
                       'B – Charisma', 'B – Agility', 'B – Stamina', 'B – Intelligence', 'B – Senses', 'B – Speed',
                       'B – Strength', 'Darkness Control', 'Density Manipulation', 'Disruption', 'Duplication',
                       'Empowerment', 'Energize', 'Enhanced Prosthetic', 'Flame', 'Flight', 'Force Field', 'Guardian',
                       'Harm', 'Healing', 'Ice', 'Illusions', 'Interface', 'Invisibility', 'Light Control', 'Lightning',
                       'Luck', 'Material Absorption', 'Metal Control', 'Mind Manipulation', 'Phasing', 'Plant Control',
                       'Power Blasts', 'Precision', 'Precognition', 'Psionics', 'Regeneration', 'Resistance',
                       'Self-Molecular', 'Manipulation', 'Size Change', 'Sonic', 'Specialized Magic Item/Gadget',
                       'Specialized Weapon', 'Stretching', 'Telekinesis', 'Teleportation', 'Unique Power',
                       'C – Charisma', 'C – Agility', 'C – Stamina', 'C – Intelligence', 'C – Senses', 'C – Speed',
                       'C – Strength', 'Combat Training', 'Emotion Manipulation', 'Envenom', 'Fight Training',
                       'First Aid', 'Gadgets/Magic Items', 'Glide', 'Jump', 'Money', 'Natural Weapon', 'Ray',
                       'Species/Genetic Power', 'Telepathy', 'Tough', 'Vehicle', 'Weapon', 'Weapons Training',
                       'Willpower']
        self.widget = []

        durability_names = ['Blunt', 'Disruption', 'Earth', 'Fall', 'Fire', "Force Fields", 'Ice',
                            'Light', 'Lightning', 'Piercing', 'Poison', 'Power', 'Psychic', 'Slashing',
                            'Sonic']

        AtierPwrs = {
            "Cost": ["4 Power Points", "8 Power Points"],
            "Name": ['Absorption', 'Adaption', 'Animal Powers', 'A – Charisma', 'A – Agility', 'A – Stamina',
                    'A – Intelligence', 'A – Senses', 'A – Speed', 'A – Strength', 'Clairvoyance', 'Constructs',
                    'Dimensional Travel', 'Earth Control', 'Gravity Control', 'Immortality', 'Invulnerability',
                    'Magic Spells', 'Mimic', 'Mind Control', 'Resurrection', 'Shape Shifting', 'Time Manipulation',
                    'Transmutation', 'Weather Control']
        }

        BtierPwrs = {
            "Cost": ["2 Power Points", "6 Power Points"],
            "Name": ['Animal Control', 'Armour', 'Astral Projection',
                    'B – Charisma', 'B – Agility', 'B – Stamina', 'B – Intelligence', 'B – Senses', 'B – Speed',
                    'B – Strength', 'Darkness Control', 'Density Manipulation', 'Disruption', 'Duplication',
                    'Empowerment', 'Energize', 'Enhanced Prosthetic', 'Flame', 'Flight', 'Force Field', 'Guardian',
                    'Harm', 'Healing', 'Ice', 'Illusions', 'Interface', 'Invisibility', 'Light Control', 'Lightning',
                    'Luck', 'Material Absorption', 'Metal Control', 'Mind Manipulation', 'Phasing', 'Plant Control',
                    'Power Blasts', 'Precision', 'Precognition', 'Psionics', 'Regeneration', 'Resistance',
                    'Self-Molecular', 'Manipulation', 'Size Change', 'Sonic', 'Specialized Magic Item/Gadget',
                    'Specialized Weapon', 'Stretching', 'Telekinesis', 'Teleportation', 'Unique Power']
        }

        CtierPwrs = {
            "Cost": ["1 Power Point", "4 Power Points"],
            "Name": ['C – Charisma', 'C – Agility', 'C – Stamina', 'C – Intelligence', 'C – Senses', 'C – Speed',
                    'C – Strength', 'Combat Training', 'Emotion Manipulation', 'Envenom', 'Fight Training',
                    'First Aid', 'Gadgets/Magic Items', 'Glide', 'Jump', 'Money', 'Natural Weapon', 'Ray',
                    'Species/Genetic Power', 'Telepathy', 'Tough', 'Vehicle', 'Weapon', 'Weapons Training',
                    'Willpower']
        }

        # Start Main Frame stuff
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(661, 905)
        font = QtGui.QFont()
        font.setFamily("Helvetica")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        MainWindow.setFont(font)
        MainWindow.setMouseTracking(True)
        MainWindow.setTabletTracking(True)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setAnimated(False)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setGeometry(QtCore.QRect(-20, -10, 671, 931))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.scrollArea.setFont(font)
        self.scrollArea.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 671, 931))
        self.scrollAreaWidgetContents.setMouseTracking(True)
        self.scrollAreaWidgetContents.setTabletTracking(True)
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.SecAbilities = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.SecAbilities.setGeometry(QtCore.QRect(250, 130, 421, 291))
        self.SecAbilities.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SecAbilities.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SecAbilities.setObjectName("SecAbilities")
        self.AbilitiesPad = QtWidgets.QTextEdit(self.SecAbilities)
        self.AbilitiesPad.setGeometry(QtCore.QRect(0, 30, 411, 261))
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.AbilitiesPad.setFont(font)
        self.AbilitiesPad.setAutoFormatting(QtWidgets.QTextEdit.AutoAll)
        self.AbilitiesPad.setObjectName("AbilitiesPad")
        self.SectionLab = QtWidgets.QLabel(self.SecAbilities)
        self.SectionLab.setGeometry(QtCore.QRect(0, 5, 171, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.SectionLab.setFont(font)
        self.SectionLab.setScaledContents(True)
        self.SectionLab.setObjectName("SectionLab")
        self.SecPowers = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.SecPowers.setGeometry(QtCore.QRect(30, 130, 211, 301))
        self.SecPowers.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.SecPowers.setFrameShadow(QtWidgets.QFrame.Plain)
        self.SecPowers.setLineWidth(0)
        self.SecPowers.setObjectName("SecPowers")
        self.LabPow = QtWidgets.QLabel(self.SecPowers)
        self.LabPow.setGeometry(QtCore.QRect(0, -1, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.LabPow.setFont(font)
        self.LabPow.setObjectName("LabPow")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.SecPowers)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(0, 51, 211, 241))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")

        # Form under the searchbar FORMTODO
        self.PwrLayout = QtWidgets.QFormLayout(self.verticalLayoutWidget)
        self.PwrLayout.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.PwrLayout.setLabelAlignment(QtCore.Qt.AlignCenter)
        self.PwrLayout.setFormAlignment(QtCore.Qt.AlignCenter)
        self.PwrLayout.setVerticalSpacing(0)
        self.PwrLayout.setObjectName("PwrLayout")

        # Start searchbar thingie
        self.PwrSearch = QtWidgets.QLineEdit(self.SecPowers)
        self.PwrSearch.setGeometry(QtCore.QRect(0, 30, 211, 22))
        self.PwrSearch.setMinimumSize(QtCore.QSize(211, 0))
        self.PwrSearch.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.PwrSearch.setText("")
        self.PwrSearch.setStyleSheet("fontName='Helvetica-Bold")
        self.PwrSearch.setAlignment(QtCore.Qt.AlignCenter)
        self.PwrSearch.setClearButtonEnabled(True)
        self.PwrSearch.setObjectName("PwrSearch")
        self.PwrSearch.returnPressed.connect(self.powerlisting)
        # End searchbar thingie

        # This is the Completer
        self.completer = QtWidgets.QCompleter(power_names)
        self.completer.setCaseSensitivity(False)
        self.PwrSearch.setCompleter(self.completer)
        # End Completer

        self.GenInfo = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.GenInfo.setGeometry(QtCore.QRect(250, 11, 411, 121))
        self.GenInfo.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.GenInfo.setFrameShadow(QtWidgets.QFrame.Raised)
        self.GenInfo.setObjectName("GenInfo")
        self.line = QtWidgets.QFrame(self.GenInfo)
        self.line.setGeometry(QtCore.QRect(10, 10, 411, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(self.GenInfo)
        self.line_2.setGeometry(QtCore.QRect(10, 30, 411, 16))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.line_3 = QtWidgets.QFrame(self.GenInfo)
        self.line_3.setGeometry(QtCore.QRect(10, 50, 411, 16))
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.line_4 = QtWidgets.QFrame(self.GenInfo)
        self.line_4.setGeometry(QtCore.QRect(10, 70, 411, 16))
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.line_5 = QtWidgets.QFrame(self.GenInfo)
        self.line_5.setGeometry(QtCore.QRect(10, 90, 411, 16))
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.CnameLab = QtWidgets.QLabel(self.GenInfo)
        self.CnameLab.setGeometry(QtCore.QRect(10, 20, 81, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.CnameLab.setFont(font)
        self.CnameLab.setObjectName("CnameLab")
        self.LevLab = QtWidgets.QLabel(self.GenInfo)
        self.LevLab.setGeometry(QtCore.QRect(270, 20, 41, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.LevLab.setFont(font)
        self.LevLab.setObjectName("LevLab")
        self.CurXPLab = QtWidgets.QLabel(self.GenInfo)
        self.CurXPLab.setGeometry(QtCore.QRect(270, 40, 81, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.CurXPLab.setFont(font)
        self.CurXPLab.setScaledContents(True)
        self.CurXPLab.setObjectName("CurXPLab")
        self.TPTLab = QtWidgets.QLabel(self.GenInfo)
        self.TPTLab.setGeometry(QtCore.QRect(270, 60, 101, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.TPTLab.setFont(font)
        self.TPTLab.setObjectName("TPTLab")
        self.HPTLab = QtWidgets.QLabel(self.GenInfo)
        self.HPTLab.setGeometry(QtCore.QRect(270, 80, 81, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.HPTLab.setFont(font)
        self.HPTLab.setObjectName("HPTLab")
        self.LnameLab = QtWidgets.QLabel(self.GenInfo)
        self.LnameLab.setGeometry(QtCore.QRect(10, 40, 81, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.LnameLab.setFont(font)
        self.LnameLab.setObjectName("LnameLab")
        self.PnounLab = QtWidgets.QLabel(self.GenInfo)
        self.PnounLab.setGeometry(QtCore.QRect(10, 60, 71, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.PnounLab.setFont(font)
        self.PnounLab.setObjectName("PnounLab")
        self.PsettingLab = QtWidgets.QLabel(self.GenInfo)
        self.PsettingLab.setGeometry(QtCore.QRect(10, 80, 101, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.PsettingLab.setFont(font)
        self.PsettingLab.setObjectName("PsettingLab")
        self.HeroBox = QtWidgets.QSpinBox(self.GenInfo)
        self.HeroBox.setGeometry(QtCore.QRect(360, 80, 51, 16))
        self.HeroBox.setAlignment(QtCore.Qt.AlignCenter)
        self.HeroBox.setObjectName("HeroBox")
        self.HeroBox.setMaximum(3)
        self.TPBox = QtWidgets.QSpinBox(self.GenInfo)
        self.TPBox.setGeometry(QtCore.QRect(370, 60, 41, 16))
        self.TPBox.setAlignment(QtCore.Qt.AlignCenter)
        self.TPBox.setObjectName("TPBox")

        #Start XP SpinBox
        self.XPBox = QtWidgets.QSpinBox(self.GenInfo)
        self.XPBox.setGeometry(QtCore.QRect(361, 40, 51, 16))
        self.XPBox.setMouseTracking(True)
        self.XPBox.setTabletTracking(True)
        self.XPBox.setAlignment(QtCore.Qt.AlignCenter)
        self.XPBox.setObjectName("XPBox")
        self.XPBox.setKeyboardTracking(False)
        self.XPBox.valueChanged.connect(self.calculatetheshitz)
        self.XPBox.setMaximum(160500)
        #End XP Spinbox

        #Start Level SpinBox
        self.LvlBox = QtWidgets.QSpinBox(self.GenInfo)
        self.LvlBox.setGeometry(QtCore.QRect(361, 20, 51, 16))
        self.LvlBox.setAlignment(QtCore.Qt.AlignCenter)
        self.LvlBox.setObjectName("LvlBox")
        #End Level Spinbox
        self.Cname = QtWidgets.QTextEdit(self.GenInfo)
        self.Cname.setGeometry(QtCore.QRect(100, 20, 151, 16))
        self.Cname.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Cname.setFrameShadow(QtWidgets.QFrame.Plain)
        self.Cname.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Cname.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Cname.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.Cname.setObjectName("Cname")
        self.Lname = QtWidgets.QTextEdit(self.GenInfo)
        self.Lname.setGeometry(QtCore.QRect(100, 40, 151, 16))
        self.Lname.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Lname.setFrameShadow(QtWidgets.QFrame.Plain)
        self.Lname.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Lname.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Lname.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.Lname.setObjectName("Lname")
        self.Pnoun1 = QtWidgets.QTextEdit(self.GenInfo)
        self.Pnoun1.setGeometry(QtCore.QRect(100, 60, 71, 16))
        self.Pnoun1.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Pnoun1.setFrameShadow(QtWidgets.QFrame.Plain)
        self.Pnoun1.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Pnoun1.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Pnoun1.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.Pnoun1.setObjectName("Pnoun1")
        self.DividermarkLab = QtWidgets.QLabel(self.GenInfo)
        self.DividermarkLab.setGeometry(QtCore.QRect(170, 60, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.DividermarkLab.setFont(font)
        self.DividermarkLab.setObjectName("DividermarkLab")
        self.Pnoun2 = QtWidgets.QTextEdit(self.GenInfo)
        self.Pnoun2.setGeometry(QtCore.QRect(180, 60, 71, 16))
        self.Pnoun2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.Pnoun2.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Pnoun2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.Pnoun2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Pnoun2.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Pnoun2.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.Pnoun2.setObjectName("Pnoun2")
        self.PwrSettingChoice = QtWidgets.QComboBox(self.GenInfo)  # ComboBox For Power Setting
        self.PwrSettingChoice.setGeometry(QtCore.QRect(110, 80, 151, 16))
        self.PwrSettingChoice.setEditable(False)
        self.PwrSettingChoice.setObjectName("PwrSettingChoice")
        self.PwrSettingChoice.addItem("")
        self.PwrSettingChoice.addItem("")
        self.PwrSettingChoice.addItem("")
        self.PwrSettingChoice.addItem("")
        self.PwrSettingChoice.addItem("")
        self.PwrSettingChoice.currentIndexChanged.connect(self.powerSetting)
        self.SecCMTATTScroll = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.SecCMTATTScroll.setGeometry(QtCore.QRect(340, 430, 331, 471))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SecCMTATTScroll.sizePolicy().hasHeightForWidth())
        self.SecCMTATTScroll.setSizePolicy(sizePolicy)
        self.SecCMTATTScroll.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.SecCMTATTScroll.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SecCMTATTScroll.setObjectName("SecCMTATTScroll")
        self.SecElab = QtWidgets.QLabel(self.SecCMTATTScroll)
        self.SecElab.setGeometry(QtCore.QRect(0, 0, 251, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.SecElab.setFont(font)
        self.SecElab.setScaledContents(True)
        self.SecElab.setObjectName("SecElab")
        self.gridLayoutWidget_3 = QtWidgets.QWidget(self.SecCMTATTScroll)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(10, 30, 291, 102))
        self.gridLayoutWidget_3.setObjectName("gridLayoutWidget_3")
        self.CBTATRLayout = QtWidgets.QGridLayout(self.gridLayoutWidget_3)
        self.CBTATRLayout.setContentsMargins(0, 0, 0, 0)
        self.CBTATRLayout.setObjectName("CBTATRLayout")
        self.label = QtWidgets.QLabel(self.gridLayoutWidget_3)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.CBTATRLayout.addWidget(self.label, 2, 0, 1, 1)
        self.HTPTLab = QtWidgets.QLabel(self.gridLayoutWidget_3)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.HTPTLab.setFont(font)
        self.HTPTLab.setAlignment(QtCore.Qt.AlignCenter)
        self.HTPTLab.setObjectName("HTPTLab")
        self.CBTATRLayout.addWidget(self.HTPTLab, 1, 0, 1, 1)
        self.BlankLab = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.BlankLab.setEnabled(False)
        self.BlankLab.setText("")
        self.BlankLab.setObjectName("BlankLab")
        self.CBTATRLayout.addWidget(self.BlankLab, 0, 0, 1, 1)
        self.CurLab = QtWidgets.QLabel(self.gridLayoutWidget_3)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.CurLab.setFont(font)
        self.CurLab.setAlignment(QtCore.Qt.AlignCenter)
        self.CurLab.setObjectName("CurLab")
        self.CBTATRLayout.addWidget(self.CurLab, 0, 1, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.CBTATRLayout.addWidget(self.label_4, 0, 2, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.CBTATRLayout.addWidget(self.label_6, 3, 0, 1, 1)
        self.HTCurBox = QtWidgets.QSpinBox(self.gridLayoutWidget_3)
        self.HTCurBox.setAlignment(QtCore.Qt.AlignCenter)
        self.HTCurBox.setObjectName("HTCurBox")
        self.CBTATRLayout.addWidget(self.HTCurBox, 1, 1, 1, 1)
        self.STACurBox = QtWidgets.QSpinBox(self.gridLayoutWidget_3)
        self.STACurBox.setAlignment(QtCore.Qt.AlignCenter)
        self.STACurBox.setObjectName("STACurBox")
        self.CBTATRLayout.addWidget(self.STACurBox, 2, 1, 1, 1)
        self.ARMCurBox = QtWidgets.QSpinBox(self.gridLayoutWidget_3)
        self.ARMCurBox.setAlignment(QtCore.Qt.AlignCenter)
        self.ARMCurBox.setObjectName("ARMCurBox")
        self.CBTATRLayout.addWidget(self.ARMCurBox, 3, 1, 1, 1)
        self.HTMaxBox = QtWidgets.QSpinBox(self.gridLayoutWidget_3)
        self.HTMaxBox.setAlignment(QtCore.Qt.AlignCenter)
        self.HTMaxBox.setObjectName("HTMaxBox")
        self.CBTATRLayout.addWidget(self.HTMaxBox, 1, 2, 1, 1)
        self.STAMaxBox = QtWidgets.QSpinBox(self.gridLayoutWidget_3)
        self.STAMaxBox.setAlignment(QtCore.Qt.AlignCenter)
        self.STAMaxBox.setObjectName("STAMaxBox")
        self.CBTATRLayout.addWidget(self.STAMaxBox, 2, 2, 1, 1)
        self.ARMMaxBox = QtWidgets.QSpinBox(self.gridLayoutWidget_3)
        self.ARMMaxBox.setAlignment(QtCore.Qt.AlignCenter)
        self.ARMMaxBox.setObjectName("ARMMaxBox")
        self.CBTATRLayout.addWidget(self.ARMMaxBox, 3, 2, 1, 1)
        self.gridLayoutWidget_4 = QtWidgets.QWidget(self.SecCMTATTScroll)
        self.gridLayoutWidget_4.setGeometry(QtCore.QRect(10, 130, 321, 231))
        self.gridLayoutWidget_4.setObjectName("gridLayoutWidget_4")
        self.CBTARTLayout2 = QtWidgets.QGridLayout(self.gridLayoutWidget_4)
        self.CBTARTLayout2.setContentsMargins(0, 0, 0, 0)
        self.CBTARTLayout2.setSpacing(3)
        self.CBTARTLayout2.setObjectName("CBTARTLayout2")
        self.HtHLab = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.HtHLab.setFont(font)
        self.HtHLab.setAlignment(QtCore.Qt.AlignCenter)
        self.HtHLab.setWordWrap(True)
        self.HtHLab.setObjectName("HtHLab")
        self.CBTARTLayout2.addWidget(self.HtHLab, 4, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.RecLab = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.RecLab.setFont(font)
        self.RecLab.setAlignment(QtCore.Qt.AlignCenter)
        self.RecLab.setObjectName("RecLab")
        self.CBTARTLayout2.addWidget(self.RecLab, 5, 0, 1, 1)
        self.HtHModBox = QtWidgets.QComboBox(self.gridLayoutWidget_4)
        self.HtHModBox.setObjectName("HtHModBox")
        self.HtHModBox.addItem("")
        self.HtHModBox.setItemText(0, "")
        self.HtHModBox.addItem("")
        self.HtHModBox.addItem("")
        self.HtHModBox.addItem("")
        self.HtHModBox.addItem("")
        self.HtHModBox.addItem("")
        self.CBTARTLayout2.addWidget(self.HtHModBox, 4, 4, 1, 1)
        self.IniBox = QtWidgets.QSpinBox(self.gridLayoutWidget_4)
        self.IniBox.setMaximumSize(QtCore.QSize(45, 16777215))
        self.IniBox.setAlignment(QtCore.Qt.AlignCenter)
        self.IniBox.setMinimum(10)
        self.IniBox.setObjectName("IniBox")
        self.CBTARTLayout2.addWidget(self.IniBox, 0, 1, 1, 1)
        self.InsLab = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.InsLab.setFont(font)
        self.InsLab.setAlignment(QtCore.Qt.AlignCenter)
        self.InsLab.setObjectName("InsLab")
        self.CBTARTLayout2.addWidget(self.InsLab, 3, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.label_8 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.CBTARTLayout2.addWidget(self.label_8, 2, 0, 1, 1)
        self.InitLab = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.InitLab.setFont(font)
        self.InitLab.setAlignment(QtCore.Qt.AlignCenter)
        self.InitLab.setObjectName("InitLab")
        self.CBTARTLayout2.addWidget(self.InitLab, 0, 0, 1, 1)
        self.HtHdTypeBox = QtWidgets.QSpinBox(self.gridLayoutWidget_4)
        self.HtHdTypeBox.setMaximumSize(QtCore.QSize(40, 16777215))
        self.HtHdTypeBox.setAlignment(QtCore.Qt.AlignCenter)
        self.HtHdTypeBox.setMinimum(0)
        self.HtHdTypeBox.setMaximum(10)
        self.HtHdTypeBox.setProperty("value", 0)
        self.HtHdTypeBox.setObjectName("HtHdTypeBox")
        self.CBTARTLayout2.addWidget(self.HtHdTypeBox, 4, 3, 1, 1)
        self.HtHDBox = QtWidgets.QSpinBox(self.gridLayoutWidget_4)
        self.HtHDBox.setEnabled(True)
        self.HtHDBox.setMinimumSize(QtCore.QSize(45, 16))
        self.HtHDBox.setMaximumSize(QtCore.QSize(40, 16777215))
        self.HtHDBox.setAlignment(QtCore.Qt.AlignCenter)
        self.HtHDBox.setMinimum(1)
        self.HtHDBox.setMaximum(3)
        self.HtHDBox.setProperty("value", 1)
        self.HtHDBox.setObjectName("HtHDBox")
        self.CBTARTLayout2.addWidget(self.HtHDBox, 4, 1, 1, 1)
        self.dLab = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.dLab.setMaximumSize(QtCore.QSize(25, 30))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.dLab.setFont(font)
        self.dLab.setAlignment(QtCore.Qt.AlignCenter)
        self.dLab.setObjectName("dLab")
        self.CBTARTLayout2.addWidget(self.dLab, 4, 2, 1, 1)
        self.InspBox = QtWidgets.QSpinBox(self.gridLayoutWidget_4)
        self.InspBox.setMaximumSize(QtCore.QSize(45, 16777215))
        self.InspBox.setAlignment(QtCore.Qt.AlignCenter)
        self.InspBox.setObjectName("InspBox")
        self.CBTARTLayout2.addWidget(self.InspBox, 3, 1, 1, 1)
        self.AccBox = QtWidgets.QSpinBox(self.gridLayoutWidget_4)
        self.AccBox.setMaximumSize(QtCore.QSize(45, 16777215))
        self.AccBox.setAlignment(QtCore.Qt.AlignCenter)
        self.AccBox.setObjectName("AccBox")
        self.CBTARTLayout2.addWidget(self.AccBox, 2, 1, 1, 1)
        self.RecBox = QtWidgets.QSpinBox(self.gridLayoutWidget_4)
        self.RecBox.setMinimumSize(QtCore.QSize(0, 0))
        self.RecBox.setMaximumSize(QtCore.QSize(45, 16777215))
        self.RecBox.setAlignment(QtCore.Qt.AlignCenter)
        self.RecBox.setMinimum(2)
        self.RecBox.setMaximum(5)
        self.RecBox.setObjectName("RecBox")
        self.CBTARTLayout2.addWidget(self.RecBox, 5, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.CBTARTLayout2.addWidget(self.label_7, 1, 0, 1, 1)
        self.DefBox = QtWidgets.QSpinBox(self.gridLayoutWidget_4)
        self.DefBox.setMaximumSize(QtCore.QSize(45, 16777215))
        self.DefBox.setAlignment(QtCore.Qt.AlignCenter)
        self.DefBox.setMinimum(10)
        self.DefBox.setObjectName("DefBox")
        self.CBTARTLayout2.addWidget(self.DefBox, 1, 1, 1, 1)
        self.gridLayoutWidget_5 = QtWidgets.QWidget(self.SecCMTATTScroll)
        self.gridLayoutWidget_5.setGeometry(QtCore.QRect(10, 360, 321, 80))
        self.gridLayoutWidget_5.setObjectName("gridLayoutWidget_5")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gridLayoutWidget_5)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.SpdLab = QtWidgets.QLabel(self.gridLayoutWidget_5)
        self.SpdLab.setMaximumSize(QtCore.QSize(95, 16777215))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.SpdLab.setFont(font)
        self.SpdLab.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.SpdLab.setObjectName("SpdLab")
        self.gridLayout_3.addWidget(self.SpdLab, 0, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.MaxLiftLab = QtWidgets.QLabel(self.gridLayoutWidget_5)
        self.MaxLiftLab.setMaximumSize(QtCore.QSize(95, 16777215))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.MaxLiftLab.setFont(font)
        self.MaxLiftLab.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.MaxLiftLab.setObjectName("MaxLiftLab")

        self.gridLayout_3.addWidget(self.MaxLiftLab, 1, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.SPDBox = QtWidgets.QComboBox(self.gridLayoutWidget_5)
        self.SPDBox.setEnabled(True)  # Set to False when saved?
        self.SPDBox.setObjectName("SPDBox")
        self.SPDBox.addItem("")
        self.SPDBox.addItem("")
        self.SPDBox.addItem("")
        self.SPDBox.addItem("")
        self.SPDBox.addItem("")
        self.SPDBox.addItem("")
        self.SPDBox.addItem("")
        self.SPDBox.addItem("")
        self.SPDBox.addItem("")
        self.SPDBox.addItem("")
        self.SPDBox.addItem("")
        self.SPDBox.addItem("")
        self.SPDBox.addItem("")
        self.gridLayout_3.addWidget(self.SPDBox, 0, 1, 1, 1)

        self.LiftBox = QtWidgets.QComboBox(self.gridLayoutWidget_5)
        self.LiftBox.setObjectName("LiftBox")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.LiftBox.addItem("")
        self.gridLayout_3.addWidget(self.LiftBox, 1, 1, 1, 1)

        self.SecSKLScroll = QtWidgets.QScrollArea(self.scrollAreaWidgetContents)
        self.SecSKLScroll.setGeometry(QtCore.QRect(30, 430, 301, 281))
        self.SecSKLScroll.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.SecSKLScroll.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.SecSKLScroll.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.SecSKLScroll.setWidgetResizable(True)
        self.SecSKLScroll.setObjectName("SecSKLScroll")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 301, 281))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.label_3 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_3.setGeometry(QtCore.QRect(0, 0, 161, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setScaledContents(True)
        self.label_3.setObjectName("label_3")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.scrollAreaWidgetContents_2)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(0, 20, 301, 196))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_2.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setSpacing(3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.SPDLab = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.SPDLab.setFont(font)
        self.SPDLab.setAlignment(QtCore.Qt.AlignCenter)
        self.SPDLab.setObjectName("SPDLab")
        self.gridLayout_2.addWidget(self.SPDLab, 5, 0, 1, 1)
        self.SenseLab = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.SenseLab.setFont(font)
        self.SenseLab.setAlignment(QtCore.Qt.AlignCenter)
        self.SenseLab.setObjectName("SenseLab")
        self.gridLayout_2.addWidget(self.SenseLab, 4, 0, 1, 1)
        self.SkillLab = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.SkillLab.setFont(font)
        self.SkillLab.setAlignment(QtCore.Qt.AlignCenter)
        self.SkillLab.setObjectName("SkillLab")
        self.gridLayout_2.addWidget(self.SkillLab, 0, 0, 1, 1)
        self.AGLLab = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.AGLLab.setFont(font)
        self.AGLLab.setAlignment(QtCore.Qt.AlignCenter)
        self.AGLLab.setObjectName("AGLLab")
        self.gridLayout_2.addWidget(self.AGLLab, 1, 0, 1, 1)
        self.INTLab = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.INTLab.setFont(font)
        self.INTLab.setAlignment(QtCore.Qt.AlignCenter)
        self.INTLab.setObjectName("INTLab")
        self.gridLayout_2.addWidget(self.INTLab, 3, 0, 1, 1)
        self.STALab = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.STALab.setFont(font)
        self.STALab.setAlignment(QtCore.Qt.AlignCenter)
        self.STALab.setObjectName("STALab")
        self.gridLayout_2.addWidget(self.STALab, 6, 0, 1, 1)
        self.CharismaLab = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.CharismaLab.setFont(font)
        self.CharismaLab.setAlignment(QtCore.Qt.AlignCenter)
        self.CharismaLab.setObjectName("CharismaLab")
        self.gridLayout_2.addWidget(self.CharismaLab, 2, 0, 1, 1)
        self.PoweredLab = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.PoweredLab.setFont(font)
        self.PoweredLab.setAlignment(QtCore.Qt.AlignCenter)
        self.PoweredLab.setObjectName("PoweredLab")
        self.gridLayout_2.addWidget(self.PoweredLab, 0, 2, 1, 1)
        self.UnpwrLab = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.UnpwrLab.setFont(font)
        self.UnpwrLab.setAlignment(QtCore.Qt.AlignCenter)
        self.UnpwrLab.setObjectName("UnpwrLab")
        self.gridLayout_2.addWidget(self.UnpwrLab, 0, 1, 1, 1)
        self.STRLab = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.STRLab.setFont(font)
        self.STRLab.setAlignment(QtCore.Qt.AlignCenter)
        self.STRLab.setObjectName("STRLab")
        self.gridLayout_2.addWidget(self.STRLab, 7, 0, 1, 1)

        # Start Spinboxes of skills
        self.UnpwrScoreAGL = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.UnpwrScoreAGL.setAlignment(QtCore.Qt.AlignCenter)
        self.UnpwrScoreAGL.setMaximum(15)
        self.UnpwrScoreAGL.setObjectName("UnpwrScoreAGL")
        self.gridLayout_2.addWidget(self.UnpwrScoreAGL, 1, 1, 1, 1)

        self.UnpwrScoreCharisma = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.UnpwrScoreCharisma.setAlignment(QtCore.Qt.AlignCenter)
        self.UnpwrScoreCharisma.setMaximum(15)
        self.UnpwrScoreCharisma.setObjectName("UnpwrScoreCharisma")
        self.gridLayout_2.addWidget(self.UnpwrScoreCharisma, 2, 1, 1, 1)

        self.UnpwrScoreINT = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.UnpwrScoreINT.setAlignment(QtCore.Qt.AlignCenter)
        self.UnpwrScoreINT.setMaximum(15)
        self.UnpwrScoreINT.setObjectName("UnpwrScoreINT")
        self.gridLayout_2.addWidget(self.UnpwrScoreINT, 3, 1, 1, 1)

        self.UnpwrScoreSenses = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.UnpwrScoreSenses.setAlignment(QtCore.Qt.AlignCenter)
        self.UnpwrScoreSenses.setMaximum(15)
        self.UnpwrScoreSenses.setObjectName("UnpwrScoreSenses")
        self.gridLayout_2.addWidget(self.UnpwrScoreSenses, 4, 1, 1, 1)

        self.UnpwrScoreSPD = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.UnpwrScoreSPD.setAlignment(QtCore.Qt.AlignCenter)
        self.UnpwrScoreSPD.setMaximum(15)
        self.UnpwrScoreSPD.setObjectName("UnpwrScoreSPD")
        self.gridLayout_2.addWidget(self.UnpwrScoreSPD, 5, 1, 1, 1)

        self.UnpwrScoreStamina = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.UnpwrScoreStamina.setAlignment(QtCore.Qt.AlignCenter)
        self.UnpwrScoreStamina.setMaximum(15)
        self.UnpwrScoreStamina.setObjectName("UnpwrScoreStamina")
        self.gridLayout_2.addWidget(self.UnpwrScoreStamina, 6, 1, 1, 1)

        self.UnpwrScoreSTR = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.UnpwrScoreSTR.setAlignment(QtCore.Qt.AlignCenter)
        self.UnpwrScoreSTR.setMaximum(15)
        self.UnpwrScoreSTR.setObjectName("UnpwrScoreSTR")
        self.gridLayout_2.addWidget(self.UnpwrScoreSTR, 7, 1, 1, 1)

        self.PwrScoreAGL = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.PwrScoreAGL.setAlignment(QtCore.Qt.AlignCenter)
        self.PwrScoreAGL.setMaximum(30)
        self.PwrScoreAGL.setObjectName("PwrScoreAGL")
        self.gridLayout_2.addWidget(self.PwrScoreAGL, 1, 2, 1, 1)

        self.PwrScoreCharisma = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.PwrScoreCharisma.setAlignment(QtCore.Qt.AlignCenter)
        self.PwrScoreCharisma.setMaximum(30)
        self.PwrScoreCharisma.setObjectName("PwrScoreCharisma")
        self.gridLayout_2.addWidget(self.PwrScoreCharisma, 2, 2, 1, 1)

        self.PwrScoreINT = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.PwrScoreINT.setAlignment(QtCore.Qt.AlignCenter)
        self.PwrScoreINT.setMaximum(30)
        self.PwrScoreINT.setObjectName("PwrScoreINT")
        self.gridLayout_2.addWidget(self.PwrScoreINT, 3, 2, 1, 1)

        self.PwrScoreSenses = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.PwrScoreSenses.setAlignment(QtCore.Qt.AlignCenter)
        self.PwrScoreSenses.setMaximum(30)
        self.PwrScoreSenses.setObjectName("PwrScoreSenses")
        self.gridLayout_2.addWidget(self.PwrScoreSenses, 4, 2, 1, 1)

        self.PwrScoreSPD = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.PwrScoreSPD.setAlignment(QtCore.Qt.AlignCenter)
        self.PwrScoreSPD.setMaximum(30)
        self.PwrScoreSPD.setObjectName("PwrScoreSPD")
        self.gridLayout_2.addWidget(self.PwrScoreSPD, 5, 2, 1, 1)

        self.PwrScoreStamina = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.PwrScoreStamina.setAlignment(QtCore.Qt.AlignCenter)
        self.PwrScoreStamina.setMaximum(30)
        self.PwrScoreStamina.setObjectName("PwrScoreStamina")
        self.gridLayout_2.addWidget(self.PwrScoreStamina, 6, 2, 1, 1)

        self.PwrScoreSTR = QtWidgets.QSpinBox(self.gridLayoutWidget_2)
        self.PwrScoreSTR.setAlignment(QtCore.Qt.AlignCenter)
        self.PwrScoreSTR.setMaximum(30)
        self.PwrScoreSTR.setObjectName("PwrScoreSTR")
        # End Spinboxes of Skills

        self.gridLayout_2.addWidget(self.PwrScoreSTR, 7, 2, 1, 1)
        self.SecSKLScroll.setWidget(self.scrollAreaWidgetContents_2)
        self.SecDurScrollLab = QtWidgets.QScrollArea(self.scrollAreaWidgetContents)
        self.SecDurScrollLab.setGeometry(QtCore.QRect(30, 650, 181, 21))
        self.SecDurScrollLab.setToolTip("")
        self.SecDurScrollLab.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.SecDurScrollLab.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.SecDurScrollLab.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.SecDurScrollLab.setWidgetResizable(True)
        self.SecDurScrollLab.setObjectName("SecDurScrollLab")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 181, 21))
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.label_5 = QtWidgets.QLabel(self.scrollAreaWidgetContents_3)
        self.label_5.setGeometry(QtCore.QRect(0, 0, 171, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setScaledContents(True)
        self.label_5.setObjectName("label_5")
        self.SecDurScrollLab.setWidget(self.scrollAreaWidgetContents_3)
        self.widget = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        self.widget.setGeometry(QtCore.QRect(30, 10, 211, 121))
        self.widget.setObjectName("widget")
        self.gridLayoutWidget = QtWidgets.QWidget(self.widget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(0, 10, 211, 111))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.EditButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.EditButton.setObjectName("EditButton")  # Edit Button
        self.gridLayout.addWidget(self.EditButton, 1, 1, 1, 1)
        self.NewHeroButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.NewHeroButton.setObjectName("NewHeroButton")  # New Hero Button
        self.NewHeroButton.clicked.connect(self.newprogram)
        self.gridLayout.addWidget(self.NewHeroButton, 0, 1, 1, 1)
        self.ExitButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.ExitButton.setObjectName("ExitButton")  # Exit Button
        self.gridLayout.addWidget(self.ExitButton, 4, 1, 1, 2)
        self.ExitButton.clicked.connect(self.exitprogram)
        self.DiceRollerButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.DiceRollerButton.setObjectName("DiceRollerButton")  # Opens Dice Roller
        self.gridLayout.addWidget(self.DiceRollerButton, 3, 1, 1, 1)
        self.RuleBookButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.RuleBookButton.setObjectName("RuleBookButton")  # Opens Rule Book PDF
        self.gridLayout.addWidget(self.RuleBookButton, 3, 2, 1, 1)
        self.LoadButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.LoadButton.setObjectName("LoadButton")  # Loads Hero
        self.gridLayout.addWidget(self.LoadButton, 1, 2, 1, 1)
        self.LoadButton.clicked.connect(self.loadinghero) #Goes to def loadinghero
        self.SaveButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.SaveButton.setObjectName("SaveButton")  # Saves Hero
        self.gridLayout.addWidget(self.SaveButton, 0, 2, 1, 1)
        self.SaveButton.clicked.connect(self.savinghero) #goes to def savinghero

        # Durability Section
        self.DuraScrollChecks = QtWidgets.QScrollArea(self.scrollAreaWidgetContents)
        self.DuraScrollChecks.setEnabled(True)
        self.DuraScrollChecks.setGeometry(QtCore.QRect(30, 680, 301, 201))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(250)
        sizePolicy.setVerticalStretch(200)
        sizePolicy.setHeightForWidth(self.DuraScrollChecks.sizePolicy().hasHeightForWidth())
        self.DuraScrollChecks.setSizePolicy(sizePolicy)
        self.DuraScrollChecks.setMinimumSize(QtCore.QSize(0, 16))
        self.DuraScrollChecks.setBaseSize(QtCore.QSize(100, 100))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.DuraScrollChecks.setFont(font)
        self.DuraScrollChecks.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.DuraScrollChecks.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.DuraScrollChecks.setWidgetResizable(True)
        self.DuraScrollChecks.setObjectName("DuraScrollChecks")
        self.scrollAreaWidgetContents_4 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_4.setGeometry(QtCore.QRect(0, -163, 284, 364))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollAreaWidgetContents_4.sizePolicy().hasHeightForWidth())
        self.scrollAreaWidgetContents_4.setSizePolicy(sizePolicy)
        self.scrollAreaWidgetContents_4.setMinimumSize(QtCore.QSize(0, 100))
        self.scrollAreaWidgetContents_4.setObjectName("scrollAreaWidgetContents_4")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_4)
        self.gridLayout_5.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.SonicLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SonicLab.sizePolicy().hasHeightForWidth())
        self.SonicLab.setSizePolicy(sizePolicy)
        self.SonicLab.setMinimumSize(QtCore.QSize(0, 16))
        self.SonicLab.setObjectName("SonicLab")
        self.gridLayout_5.addWidget(self.SonicLab, 15, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.BlInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.BlInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.BlInvBox.sizePolicy().hasHeightForWidth())
        self.BlInvBox.setSizePolicy(sizePolicy)
        self.BlInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.BlInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.BlInvBox.setFont(font)
        self.BlInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.BlInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.BlInvBox.setText("")
        self.BlInvBox.setAutoExclusive(True)
        self.BlInvBox.setTristate(False)
        self.BlInvBox.setObjectName("BlInvBox")
        self.gridLayout_5.addWidget(self.BlInvBox, 1, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.FireLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FireLab.sizePolicy().hasHeightForWidth())
        self.FireLab.setSizePolicy(sizePolicy)
        self.FireLab.setMinimumSize(QtCore.QSize(0, 16))
        self.FireLab.setObjectName("FireLab")
        self.gridLayout_5.addWidget(self.FireLab, 5, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.ForceFieldsLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ForceFieldsLab.sizePolicy().hasHeightForWidth())
        self.ForceFieldsLab.setSizePolicy(sizePolicy)
        self.ForceFieldsLab.setMinimumSize(QtCore.QSize(0, 16))
        self.ForceFieldsLab.setObjectName("ForceFieldsLab")
        self.gridLayout_5.addWidget(self.ForceFieldsLab, 6, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.LightningLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LightningLab.sizePolicy().hasHeightForWidth())
        self.LightningLab.setSizePolicy(sizePolicy)
        self.LightningLab.setMinimumSize(QtCore.QSize(0, 16))
        self.LightningLab.setObjectName("LightningLab")
        self.gridLayout_5.addWidget(self.LightningLab, 9, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.LightLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LightLab.sizePolicy().hasHeightForWidth())
        self.LightLab.setSizePolicy(sizePolicy)
        self.LightLab.setMinimumSize(QtCore.QSize(0, 16))
        self.LightLab.setObjectName("LightLab")
        self.gridLayout_5.addWidget(self.LightLab, 8, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.PierceLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PierceLab.sizePolicy().hasHeightForWidth())
        self.PierceLab.setSizePolicy(sizePolicy)
        self.PierceLab.setMinimumSize(QtCore.QSize(0, 16))
        self.PierceLab.setObjectName("PierceLab")
        self.gridLayout_5.addWidget(self.PierceLab, 10, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.IceLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.IceLab.sizePolicy().hasHeightForWidth())
        self.IceLab.setSizePolicy(sizePolicy)
        self.IceLab.setMinimumSize(QtCore.QSize(0, 16))
        self.IceLab.setObjectName("IceLab")
        self.gridLayout_5.addWidget(self.IceLab, 7, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.PsyLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PsyLab.sizePolicy().hasHeightForWidth())
        self.PsyLab.setSizePolicy(sizePolicy)
        self.PsyLab.setMinimumSize(QtCore.QSize(0, 16))
        self.PsyLab.setObjectName("PsyLab")
        self.gridLayout_5.addWidget(self.PsyLab, 13, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.SlashLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SlashLab.sizePolicy().hasHeightForWidth())
        self.SlashLab.setSizePolicy(sizePolicy)
        self.SlashLab.setMinimumSize(QtCore.QSize(0, 16))
        self.SlashLab.setObjectName("SlashLab")
        self.gridLayout_5.addWidget(self.SlashLab, 14, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.PWRLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PWRLab.sizePolicy().hasHeightForWidth())
        self.PWRLab.setSizePolicy(sizePolicy)
        self.PWRLab.setMinimumSize(QtCore.QSize(0, 16))
        self.PWRLab.setObjectName("PWRLab")
        self.gridLayout_5.addWidget(self.PWRLab, 12, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.PSNLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PSNLab.sizePolicy().hasHeightForWidth())
        self.PSNLab.setSizePolicy(sizePolicy)
        self.PSNLab.setMinimumSize(QtCore.QSize(0, 16))
        self.PSNLab.setObjectName("PSNLab")
        self.gridLayout_5.addWidget(self.PSNLab, 11, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.ResistLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        self.ResistLab.setMinimumSize(QtCore.QSize(0, 16))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.ResistLab.setFont(font)
        self.ResistLab.setObjectName("ResistLab")
        self.gridLayout_5.addWidget(self.ResistLab, 0, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.BluntLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.BluntLab.sizePolicy().hasHeightForWidth())
        self.BluntLab.setSizePolicy(sizePolicy)
        self.BluntLab.setMinimumSize(QtCore.QSize(0, 16))
        self.BluntLab.setObjectName("BluntLab")
        self.gridLayout_5.addWidget(self.BluntLab, 1, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.FRReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.FRReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FRReBox.sizePolicy().hasHeightForWidth())
        self.FRReBox.setSizePolicy(sizePolicy)
        self.FRReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.FRReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.FRReBox.setFont(font)
        self.FRReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.FRReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.FRReBox.setText("")
        self.FRReBox.setAutoExclusive(True)
        self.FRReBox.setTristate(False)
        self.FRReBox.setObjectName("FRReBox")
        self.gridLayout_5.addWidget(self.FRReBox, 5, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.PWRReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.PWRReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PWRReBox.sizePolicy().hasHeightForWidth())
        self.PWRReBox.setSizePolicy(sizePolicy)
        self.PWRReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.PWRReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.PWRReBox.setFont(font)
        self.PWRReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.PWRReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.PWRReBox.setText("")
        self.PWRReBox.setAutoExclusive(True)
        self.PWRReBox.setTristate(False)
        self.PWRReBox.setObjectName("PWRReBox")
        self.gridLayout_5.addWidget(self.PWRReBox, 12, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.LTReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.LTReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LTReBox.sizePolicy().hasHeightForWidth())
        self.LTReBox.setSizePolicy(sizePolicy)
        self.LTReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.LTReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.LTReBox.setFont(font)
        self.LTReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.LTReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.LTReBox.setText("")
        self.LTReBox.setAutoExclusive(True)
        self.LTReBox.setTristate(False)
        self.LTReBox.setObjectName("LTReBox")
        self.gridLayout_5.addWidget(self.LTReBox, 8, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.PSYReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.PSYReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PSYReBox.sizePolicy().hasHeightForWidth())
        self.PSYReBox.setSizePolicy(sizePolicy)
        self.PSYReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.PSYReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.PSYReBox.setFont(font)
        self.PSYReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.PSYReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.PSYReBox.setText("")
        self.PSYReBox.setAutoExclusive(True)
        self.PSYReBox.setTristate(False)
        self.PSYReBox.setObjectName("PSYReBox")
        self.gridLayout_5.addWidget(self.PSYReBox, 13, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.FFReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.FFReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FFReBox.sizePolicy().hasHeightForWidth())
        self.FFReBox.setSizePolicy(sizePolicy)
        self.FFReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.FFReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.FFReBox.setFont(font)
        self.FFReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.FFReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.FFReBox.setText("")
        self.FFReBox.setAutoExclusive(True)
        self.FFReBox.setTristate(False)
        self.FFReBox.setObjectName("FFReBox")
        self.gridLayout_5.addWidget(self.FFReBox, 6, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.SLReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.SLReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SLReBox.sizePolicy().hasHeightForWidth())
        self.SLReBox.setSizePolicy(sizePolicy)
        self.SLReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.SLReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.SLReBox.setFont(font)
        self.SLReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.SLReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.SLReBox.setText("")
        self.SLReBox.setAutoExclusive(True)
        self.SLReBox.setTristate(False)
        self.SLReBox.setObjectName("SLReBox")
        self.gridLayout_5.addWidget(self.SLReBox, 14, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.ICEReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.ICEReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ICEReBox.sizePolicy().hasHeightForWidth())
        self.ICEReBox.setSizePolicy(sizePolicy)
        self.ICEReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.ICEReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.ICEReBox.setFont(font)
        self.ICEReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.ICEReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.ICEReBox.setText("")
        self.ICEReBox.setAutoExclusive(True)
        self.ICEReBox.setTristate(False)
        self.ICEReBox.setObjectName("ICEReBox")
        self.gridLayout_5.addWidget(self.ICEReBox, 7, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.DISReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.DISReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.DISReBox.sizePolicy().hasHeightForWidth())
        self.DISReBox.setSizePolicy(sizePolicy)
        self.DISReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.DISReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.DISReBox.setFont(font)
        self.DISReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.DISReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.DISReBox.setText("")
        self.DISReBox.setAutoExclusive(True)
        self.DISReBox.setTristate(False)
        self.DISReBox.setObjectName("DISReBox")
        self.gridLayout_5.addWidget(self.DISReBox, 2, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.FallLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FallLab.sizePolicy().hasHeightForWidth())
        self.FallLab.setSizePolicy(sizePolicy)
        self.FallLab.setMinimumSize(QtCore.QSize(0, 16))
        self.FallLab.setObjectName("FallLab")
        self.gridLayout_5.addWidget(self.FallLab, 4, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.DisrupLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.DisrupLab.sizePolicy().hasHeightForWidth())
        self.DisrupLab.setSizePolicy(sizePolicy)
        self.DisrupLab.setMinimumSize(QtCore.QSize(0, 16))
        self.DisrupLab.setObjectName("DisrupLab")
        self.gridLayout_5.addWidget(self.DisrupLab, 2, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.LTNReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.LTNReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LTNReBox.sizePolicy().hasHeightForWidth())
        self.LTNReBox.setSizePolicy(sizePolicy)
        self.LTNReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.LTNReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.LTNReBox.setFont(font)
        self.LTNReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.LTNReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.LTNReBox.setText("")
        self.LTNReBox.setAutoExclusive(True)
        self.LTNReBox.setTristate(False)
        self.LTNReBox.setObjectName("LTNReBox")
        self.gridLayout_5.addWidget(self.LTNReBox, 9, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.PieReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.PieReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PieReBox.sizePolicy().hasHeightForWidth())
        self.PieReBox.setSizePolicy(sizePolicy)
        self.PieReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.PieReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.PieReBox.setFont(font)
        self.PieReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.PieReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.PieReBox.setText("")
        self.PieReBox.setAutoExclusive(True)
        self.PieReBox.setTristate(False)
        self.PieReBox.setObjectName("PieReBox")
        self.gridLayout_5.addWidget(self.PieReBox, 10, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.SNReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.SNReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SNReBox.sizePolicy().hasHeightForWidth())
        self.SNReBox.setSizePolicy(sizePolicy)
        self.SNReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.SNReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.SNReBox.setFont(font)
        self.SNReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.SNReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.SNReBox.setText("")
        self.SNReBox.setAutoExclusive(True)
        self.SNReBox.setTristate(False)
        self.SNReBox.setObjectName("SNReBox")
        self.gridLayout_5.addWidget(self.SNReBox, 15, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.FLReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.FLReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FLReBox.sizePolicy().hasHeightForWidth())
        self.FLReBox.setSizePolicy(sizePolicy)
        self.FLReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.FLReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.FLReBox.setFont(font)
        self.FLReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.FLReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.FLReBox.setText("")
        self.FLReBox.setAutoExclusive(True)
        self.FLReBox.setTristate(False)
        self.FLReBox.setObjectName("FLReBox")
        self.gridLayout_5.addWidget(self.FLReBox, 4, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.ERTReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.ERTReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ERTReBox.sizePolicy().hasHeightForWidth())
        self.ERTReBox.setSizePolicy(sizePolicy)
        self.ERTReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.ERTReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.ERTReBox.setFont(font)
        self.ERTReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.ERTReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.ERTReBox.setText("")
        self.ERTReBox.setAutoExclusive(True)
        self.ERTReBox.setTristate(False)
        self.ERTReBox.setObjectName("ERTReBox")
        self.gridLayout_5.addWidget(self.ERTReBox, 3, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.PSNReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.PSNReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PSNReBox.sizePolicy().hasHeightForWidth())
        self.PSNReBox.setSizePolicy(sizePolicy)
        self.PSNReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.PSNReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.PSNReBox.setFont(font)
        self.PSNReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.PSNReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.PSNReBox.setText("")
        self.PSNReBox.setAutoExclusive(True)
        self.PSNReBox.setTristate(False)
        self.PSNReBox.setObjectName("PSNReBox")
        self.gridLayout_5.addWidget(self.PSNReBox, 11, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.DISInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.DISInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.DISInvBox.sizePolicy().hasHeightForWidth())
        self.DISInvBox.setSizePolicy(sizePolicy)
        self.DISInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.DISInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.DISInvBox.setFont(font)
        self.DISInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.DISInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.DISInvBox.setText("")
        self.DISInvBox.setAutoExclusive(True)
        self.DISInvBox.setTristate(False)
        self.DISInvBox.setObjectName("DISInvBox")
        self.gridLayout_5.addWidget(self.DISInvBox, 2, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.EarthLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.EarthLab.sizePolicy().hasHeightForWidth())
        self.EarthLab.setSizePolicy(sizePolicy)
        self.EarthLab.setMinimumSize(QtCore.QSize(0, 16))
        self.EarthLab.setObjectName("EarthLab")
        self.gridLayout_5.addWidget(self.EarthLab, 3, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.ERTInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.ERTInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ERTInvBox.sizePolicy().hasHeightForWidth())
        self.ERTInvBox.setSizePolicy(sizePolicy)
        self.ERTInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.ERTInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.ERTInvBox.setFont(font)
        self.ERTInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.ERTInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.ERTInvBox.setText("")
        self.ERTInvBox.setAutoExclusive(True)
        self.ERTInvBox.setTristate(False)
        self.ERTInvBox.setObjectName("ERTInvBox")
        self.gridLayout_5.addWidget(self.ERTInvBox, 3, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.TypeLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        self.TypeLab.setMinimumSize(QtCore.QSize(0, 16))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.TypeLab.setFont(font)
        self.TypeLab.setWordWrap(True)
        self.TypeLab.setObjectName("TypeLab")
        self.gridLayout_5.addWidget(self.TypeLab, 0, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.InVulLab = QtWidgets.QLabel(self.scrollAreaWidgetContents_4)
        self.InVulLab.setMinimumSize(QtCore.QSize(0, 16))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.InVulLab.setFont(font)
        self.InVulLab.setObjectName("InVulLab")
        self.gridLayout_5.addWidget(self.InVulLab, 0, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.FFInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.FFInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FFInvBox.sizePolicy().hasHeightForWidth())
        self.FFInvBox.setSizePolicy(sizePolicy)
        self.FFInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.FFInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.FFInvBox.setFont(font)
        self.FFInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.FFInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.FFInvBox.setText("")
        self.FFInvBox.setAutoExclusive(True)
        self.FFInvBox.setTristate(False)
        self.FFInvBox.setObjectName("FFInvBox")
        self.gridLayout_5.addWidget(self.FFInvBox, 6, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.ICEInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.ICEInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ICEInvBox.sizePolicy().hasHeightForWidth())
        self.ICEInvBox.setSizePolicy(sizePolicy)
        self.ICEInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.ICEInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.ICEInvBox.setFont(font)
        self.ICEInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.ICEInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.ICEInvBox.setText("")
        self.ICEInvBox.setAutoExclusive(True)
        self.ICEInvBox.setTristate(False)
        self.ICEInvBox.setObjectName("ICEInvBox")
        self.gridLayout_5.addWidget(self.ICEInvBox, 7, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.FRInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.FRInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FRInvBox.sizePolicy().hasHeightForWidth())
        self.FRInvBox.setSizePolicy(sizePolicy)
        self.FRInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.FRInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.FRInvBox.setFont(font)
        self.FRInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.FRInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.FRInvBox.setText("")
        self.FRInvBox.setAutoExclusive(True)
        self.FRInvBox.setTristate(False)
        self.FRInvBox.setObjectName("FRInvBox")
        self.gridLayout_5.addWidget(self.FRInvBox, 5, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.LTInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.LTInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LTInvBox.sizePolicy().hasHeightForWidth())
        self.LTInvBox.setSizePolicy(sizePolicy)
        self.LTInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.LTInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.LTInvBox.setFont(font)
        self.LTInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.LTInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.LTInvBox.setText("")
        self.LTInvBox.setAutoExclusive(True)
        self.LTInvBox.setTristate(False)
        self.LTInvBox.setObjectName("LTInvBox")
        self.gridLayout_5.addWidget(self.LTInvBox, 8, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.FLInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.FLInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FLInvBox.sizePolicy().hasHeightForWidth())
        self.FLInvBox.setSizePolicy(sizePolicy)
        self.FLInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.FLInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.FLInvBox.setFont(font)
        self.FLInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.FLInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.FLInvBox.setText("")
        self.FLInvBox.setAutoExclusive(True)
        self.FLInvBox.setTristate(False)
        self.FLInvBox.setObjectName("FLInvBox")
        self.gridLayout_5.addWidget(self.FLInvBox, 4, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.LTNInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.LTNInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LTNInvBox.sizePolicy().hasHeightForWidth())
        self.LTNInvBox.setSizePolicy(sizePolicy)
        self.LTNInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.LTNInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.LTNInvBox.setFont(font)
        self.LTNInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.LTNInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.LTNInvBox.setText("")
        self.LTNInvBox.setAutoExclusive(True)
        self.LTNInvBox.setTristate(False)
        self.LTNInvBox.setObjectName("LTNInvBox")
        self.gridLayout_5.addWidget(self.LTNInvBox, 9, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.PieInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.PieInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PieInvBox.sizePolicy().hasHeightForWidth())
        self.PieInvBox.setSizePolicy(sizePolicy)
        self.PieInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.PieInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.PieInvBox.setFont(font)
        self.PieInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.PieInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.PieInvBox.setText("")
        self.PieInvBox.setAutoExclusive(True)
        self.PieInvBox.setTristate(False)
        self.PieInvBox.setObjectName("PieInvBox")
        self.gridLayout_5.addWidget(self.PieInvBox, 10, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.PWRInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.PWRInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PWRInvBox.sizePolicy().hasHeightForWidth())
        self.PWRInvBox.setSizePolicy(sizePolicy)
        self.PWRInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.PWRInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.PWRInvBox.setFont(font)
        self.PWRInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.PWRInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.PWRInvBox.setText("")
        self.PWRInvBox.setAutoExclusive(True)
        self.PWRInvBox.setTristate(False)
        self.PWRInvBox.setObjectName("PWRInvBox")
        self.gridLayout_5.addWidget(self.PWRInvBox, 12, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.PSNInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.PSNInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PSNInvBox.sizePolicy().hasHeightForWidth())
        self.PSNInvBox.setSizePolicy(sizePolicy)
        self.PSNInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.PSNInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.PSNInvBox.setFont(font)
        self.PSNInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.PSNInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.PSNInvBox.setText("")
        self.PSNInvBox.setAutoExclusive(True)
        self.PSNInvBox.setTristate(False)
        self.PSNInvBox.setObjectName("PSNInvBox")
        self.gridLayout_5.addWidget(self.PSNInvBox, 11, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.SNInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.SNInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SNInvBox.sizePolicy().hasHeightForWidth())
        self.SNInvBox.setSizePolicy(sizePolicy)
        self.SNInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.SNInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.SNInvBox.setFont(font)
        self.SNInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.SNInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.SNInvBox.setText("")
        self.SNInvBox.setAutoExclusive(True)
        self.SNInvBox.setTristate(False)
        self.SNInvBox.setObjectName("SNInvBox")
        self.gridLayout_5.addWidget(self.SNInvBox, 15, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.PSYInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.PSYInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PSYInvBox.sizePolicy().hasHeightForWidth())
        self.PSYInvBox.setSizePolicy(sizePolicy)
        self.PSYInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.PSYInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.PSYInvBox.setFont(font)
        self.PSYInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.PSYInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.PSYInvBox.setText("")
        self.PSYInvBox.setAutoExclusive(True)
        self.PSYInvBox.setTristate(False)
        self.PSYInvBox.setObjectName("PSYInvBox")
        self.gridLayout_5.addWidget(self.PSYInvBox, 13, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.SLInvBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.SLInvBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SLInvBox.sizePolicy().hasHeightForWidth())
        self.SLInvBox.setSizePolicy(sizePolicy)
        self.SLInvBox.setMinimumSize(QtCore.QSize(5, 16))
        self.SLInvBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.SLInvBox.setFont(font)
        self.SLInvBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.SLInvBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.SLInvBox.setText("")
        self.SLInvBox.setAutoExclusive(True)
        self.SLInvBox.setTristate(False)
        self.SLInvBox.setObjectName("SLInvBox")
        self.gridLayout_5.addWidget(self.SLInvBox, 14, 3, 1, 1, QtCore.Qt.AlignHCenter)
        self.BlReBox = QtWidgets.QCheckBox(self.scrollAreaWidgetContents_4)
        self.BlReBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.BlReBox.sizePolicy().hasHeightForWidth())
        self.BlReBox.setSizePolicy(sizePolicy)
        self.BlReBox.setMinimumSize(QtCore.QSize(5, 16))
        self.BlReBox.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.BlReBox.setFont(font)
        self.BlReBox.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.BlReBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.BlReBox.setText("")
        self.BlReBox.setChecked(False)
        self.BlReBox.setAutoExclusive(True)
        self.BlReBox.setTristate(False)
        self.BlReBox.setObjectName("BlReBox")
        self.gridLayout_5.addWidget(self.BlReBox, 1, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.DuraScrollChecks.setWidget(self.scrollAreaWidgetContents_4)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        # End Durability Section

        # Start searchbar thingie for Durability
        self.PwrSearch = QtWidgets.QLineEdit(self.SecPowers)
        self.PwrSearch.setGeometry(QtCore.QRect(0, 30, 211, 22))
        self.PwrSearch.setMinimumSize(QtCore.QSize(211, 0))
        self.PwrSearch.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.PwrSearch.setText("")
        self.PwrSearch.setStyleSheet("fontName='Helvetica-Bold")
        self.PwrSearch.setAlignment(QtCore.Qt.AlignCenter)
        self.PwrSearch.setClearButtonEnabled(True)
        self.PwrSearch.setObjectName("PwrSearch")
        self.PwrSearch.returnPressed.connect(self.powerlisting)
        # End searchbar thingie for Durability

        # This is the Completer Durability
        self.completer = QtWidgets.QCompleter(durability_names)
        self.completer.setCaseSensitivity(False)
        self.PwrSearch.setCompleter(self.completer)
        # End Completer Durability

        MainWindow.setCentralWidget(self.centralwidget)

        # Start buddy list of stuff
        self.CnameLab.setBuddy(self.Cname)
        self.LevLab.setBuddy(self.LvlBox)
        self.CurXPLab.setBuddy(self.XPBox)
        self.TPTLab.setBuddy(self.TPBox)
        self.HPTLab.setBuddy(self.HeroBox)
        self.LnameLab.setBuddy(self.Lname)
        self.PnounLab.setBuddy(self.Pnoun1)
        self.PsettingLab.setBuddy(self.PwrSettingChoice)
        self.RecLab.setBuddy(self.RecBox)
        self.InsLab.setBuddy(self.InspBox)
        self.label_8.setBuddy(self.AccBox)
        self.InitLab.setBuddy(self.IniBox)
        self.label_7.setBuddy(self.DefBox)
        self.SpdLab.setBuddy(self.SPDBox)
        self.MaxLiftLab.setBuddy(self.LiftBox)
        # End Buddy List stuff

        self.retranslateUi(MainWindow)

        # Start tab order
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.NewHeroButton, self.SaveButton)
        MainWindow.setTabOrder(self.SaveButton, self.EditButton)
        MainWindow.setTabOrder(self.EditButton, self.LoadButton)
        MainWindow.setTabOrder(self.LoadButton, self.DiceRollerButton)
        MainWindow.setTabOrder(self.DiceRollerButton, self.RuleBookButton)
        MainWindow.setTabOrder(self.RuleBookButton, self.ExitButton)
        MainWindow.setTabOrder(self.ExitButton, self.Cname)
        MainWindow.setTabOrder(self.Cname, self.Lname)
        MainWindow.setTabOrder(self.Lname, self.Pnoun1)
        MainWindow.setTabOrder(self.Pnoun1, self.Pnoun2)
        MainWindow.setTabOrder(self.Pnoun2, self.PwrSettingChoice)
        MainWindow.setTabOrder(self.PwrSettingChoice, self.LvlBox)
        MainWindow.setTabOrder(self.LvlBox, self.XPBox)
        MainWindow.setTabOrder(self.XPBox, self.TPBox)
        MainWindow.setTabOrder(self.TPBox, self.HeroBox)
        MainWindow.setTabOrder(self.HeroBox, self.PwrSearch)
        MainWindow.setTabOrder(self.PwrSearch, self.AbilitiesPad)
        MainWindow.setTabOrder(self.AbilitiesPad, self.SecSKLScroll)
        MainWindow.setTabOrder(self.SecSKLScroll, self.UnpwrScoreAGL)
        MainWindow.setTabOrder(self.UnpwrScoreAGL, self.PwrScoreAGL)
        MainWindow.setTabOrder(self.PwrScoreAGL, self.UnpwrScoreCharisma)
        MainWindow.setTabOrder(self.UnpwrScoreCharisma, self.PwrScoreCharisma)
        MainWindow.setTabOrder(self.PwrScoreCharisma, self.UnpwrScoreINT)
        MainWindow.setTabOrder(self.UnpwrScoreINT, self.PwrScoreINT)
        MainWindow.setTabOrder(self.PwrScoreINT, self.UnpwrScoreSenses)
        MainWindow.setTabOrder(self.UnpwrScoreSenses, self.PwrScoreSenses)
        MainWindow.setTabOrder(self.PwrScoreSenses, self.UnpwrScoreSPD)
        MainWindow.setTabOrder(self.UnpwrScoreSPD, self.PwrScoreSPD)
        MainWindow.setTabOrder(self.PwrScoreSPD, self.UnpwrScoreStamina)
        MainWindow.setTabOrder(self.UnpwrScoreStamina, self.PwrScoreStamina)
        MainWindow.setTabOrder(self.PwrScoreStamina, self.UnpwrScoreSTR)
        MainWindow.setTabOrder(self.UnpwrScoreSTR, self.PwrScoreSTR)
        MainWindow.setTabOrder(self.PwrScoreSTR, self.HTCurBox)
        MainWindow.setTabOrder(self.HTCurBox, self.HTMaxBox)
        MainWindow.setTabOrder(self.HTMaxBox, self.STACurBox)
        MainWindow.setTabOrder(self.STACurBox, self.STAMaxBox)
        MainWindow.setTabOrder(self.STAMaxBox, self.ARMCurBox)
        MainWindow.setTabOrder(self.ARMCurBox, self.ARMMaxBox)
        MainWindow.setTabOrder(self.ARMMaxBox, self.IniBox)
        MainWindow.setTabOrder(self.IniBox, self.DefBox)
        MainWindow.setTabOrder(self.DefBox, self.AccBox)
        MainWindow.setTabOrder(self.AccBox, self.InspBox)
        MainWindow.setTabOrder(self.InspBox, self.HtHDBox)
        MainWindow.setTabOrder(self.HtHDBox, self.HtHdTypeBox)
        MainWindow.setTabOrder(self.HtHdTypeBox, self.HtHModBox)
        MainWindow.setTabOrder(self.HtHModBox, self.RecBox)
        MainWindow.setTabOrder(self.RecBox, self.SPDBox)
        MainWindow.setTabOrder(self.SPDBox, self.LiftBox)
        MainWindow.setTabOrder(self.LiftBox, self.DuraScrollChecks)
        MainWindow.setTabOrder(self.DuraScrollChecks, self.BlReBox)
        MainWindow.setTabOrder(self.BlReBox, self.BlInvBox)
        MainWindow.setTabOrder(self.BlInvBox, self.DISReBox)
        MainWindow.setTabOrder(self.DISReBox, self.DISInvBox)
        MainWindow.setTabOrder(self.DISInvBox, self.ERTReBox)
        MainWindow.setTabOrder(self.ERTReBox, self.ERTInvBox)
        MainWindow.setTabOrder(self.ERTInvBox, self.FLReBox)
        MainWindow.setTabOrder(self.FLReBox, self.FLInvBox)
        MainWindow.setTabOrder(self.FLInvBox, self.FRReBox)
        MainWindow.setTabOrder(self.FRReBox, self.FRInvBox)
        MainWindow.setTabOrder(self.FRInvBox, self.FFReBox)
        MainWindow.setTabOrder(self.FFReBox, self.FFInvBox)
        MainWindow.setTabOrder(self.FFInvBox, self.ICEReBox)
        MainWindow.setTabOrder(self.ICEReBox, self.ICEInvBox)
        MainWindow.setTabOrder(self.ICEInvBox, self.LTReBox)
        MainWindow.setTabOrder(self.LTReBox, self.LTInvBox)
        MainWindow.setTabOrder(self.LTInvBox, self.LTNReBox)
        MainWindow.setTabOrder(self.LTNReBox, self.LTNInvBox)
        MainWindow.setTabOrder(self.LTNInvBox, self.PieReBox)
        MainWindow.setTabOrder(self.PieReBox, self.PieInvBox)
        MainWindow.setTabOrder(self.PieInvBox, self.PWRReBox)
        MainWindow.setTabOrder(self.PWRReBox, self.PWRInvBox)
        MainWindow.setTabOrder(self.PWRInvBox, self.SNReBox)
        MainWindow.setTabOrder(self.SNReBox, self.PSNReBox)
        MainWindow.setTabOrder(self.PSNReBox, self.SLReBox)
        MainWindow.setTabOrder(self.SLReBox, self.PSYReBox)
        MainWindow.setTabOrder(self.PSYReBox, self.PSNInvBox)
        MainWindow.setTabOrder(self.PSNInvBox, self.SNInvBox)
        MainWindow.setTabOrder(self.SNInvBox, self.PSYInvBox)
        MainWindow.setTabOrder(self.PSYInvBox, self.SLInvBox)
        MainWindow.setTabOrder(self.SLInvBox, self.scrollArea)
        MainWindow.setTabOrder(self.scrollArea, self.SecDurScrollLab)
        # End tab order (Gods help me)

    #TODO: New hero should clear the field.
    #def newHeroButton(self):

    #TODO: Make a dice roller widget to do the dices for you.
    #def dicerollerhelper(self):



    #TODO: Make this actually save data. Relocate the math for the skill calculations?
    def savinghero(self):
        #option = QFileDialog.Options()
        #file = QFileDialog.getSaveFileName(MainWindow, "Save Hero Window", "Hero Name.txt", "All Files (*)", options=option)
        #print(file)

        UnpwrAGL = self.UnpwrScoreAGL.value()
        PwrAGL = self.PwrScoreAGL.value()
        AGL = max(self.UnpwrScoreAGL.value(), self.PwrScoreAGL.value())
        if UnpwrAGL >= PwrAGL:
            self.skillCalAGL()
            self.skillCalAGL()
        else:
            self.skillCalPwrAGL()

        UnpwrSEN = self.UnpwrScoreSenses.value()
        PwrSen = self.PwrScoreSenses.value()
        SEN = max(UnpwrSEN, PwrSen)
        if UnpwrSEN >= PwrSen:
            self.skillcalsSEN()
        else:
            self.skillcalPWRSen()

        UnpwrCha = self.UnpwrScoreCharisma.value()
        PwrCha = self.PwrScoreCharisma.value()
        CHA = max(UnpwrCha, PwrCha)
        if UnpwrCha >= PwrCha:
            self.skillcalsCHA()
        else:
            self.skillcalsPwrCHA()

        UnpwrSPD = self.UnpwrScoreSPD.value()
        PwrSPD = self.PwrScoreSPD.value()
        SPD = max(UnpwrSPD, PwrSPD)
        if UnpwrSPD >= PwrSPD:
            self.skillcalsSPD()
        else:
            self.skillcalsPwrSPD()

        UnpwrInt = self.UnpwrScoreINT.value()
        PwrInt = self.PwrScoreINT.value()
        INT = max(UnpwrInt, PwrInt)
        if UnpwrInt >= PwrInt:
            self.skillcalsINT()
        else:
            self.skillcalsPwrINT()

        UnpwrSTR = self.UnpwrScoreSTR.value()
        PwrSTR = self.PwrScoreSTR.value()
        STR = max(UnpwrSTR, PwrSTR)
        if UnpwrSTR >= PwrSTR:
            self.skillcalsSTR()
        else:
            self.skillcalsPwrSTR()

        UnpwrSTA = self.UnpwrScoreStamina.value()
        PwrSTA = self.PwrScoreStamina.value()
        if UnpwrSTA >= PwrSTA:
            self.skillcalsSTA()
            highskill = max(STR, SPD, AGL, INT)
            StatUnTot = highskill + UnpwrSTA
            self.STAMaxBox.setValue(StatUnTot)
            self.STACurBox.setValue(StatUnTot)

        else:
            self.skillcalsPwrSTA()
            highskill = max(STR, SPD, AGL, INT)
            STATot = highskill + PwrSTA
            self.STAMaxBox.setValue(STATot)
            self.STACurBox.setValue(STATot)

        #This next line is just erasing STA, whoops?
        heroskills = [self.STAMaxBox.value(), self.HTMaxBox.value(), AGL, CHA, INT, SEN, SPD, STR]

        print(heroskills)

    #TODO: Make it load the correct stuff.
    def loadinghero(self):
        loadoption = QFileDialog.Options()
        loadfile = QFileDialog.getOpenFileName(MainWindow, "", "", "", options=loadoption)
        print(loadfile)

    #TODO: Make this work FORMTODO
    def powerlisting(self):
        #PwrLayout is where it goes and PwrSearch is the editline
        pwrset = []
        if self.PwrSearch.text() == '':
            print("Pick a power!")
            pass
        else:
            selectpwr = self.PwrSearch.text()
            self.PwrLayout.addWidget(QtWidgets.QLabel(selectpwr))

    def durabilitylisting(self):
        #DurLayout is where it goes and DurSearch is the editline
        durset = []
        if self.DurSearch.text() == '':
            print("Pick a durability!")
            pass
        else:
            selectdur = self.DurSearch.text()
            self.DurLayout.addWidget(QtWidgets.QLabel(selectdur))

    #TODO: Make checks for the setting not to change, possible custom tag.
    def powerSetting(self):
        if self.PwrSettingChoice.currentText() == "Low Power":
            self.HTCurBox.setValue(5)
            self.HTMaxBox.setValue(5) # type: ignore
            self.STACurBox.setValue(5) # type: ignore
            self.STAMaxBox.setValue(5)
        elif self.PwrSettingChoice.currentText() == "Medium Power":
            self.HTCurBox.setValue(10)
            self.HTMaxBox.setValue(10) # type: ignore
            self.STACurBox.setValue(10) # type: ignore
            self.STAMaxBox.setValue(10)
        elif self.PwrSettingChoice.currentText() == "High Power":
            self.HTCurBox.setValue(15)
            self.HTMaxBox.setValue(15) # type: ignore
            self.STACurBox.setValue(15) # type: ignore
            self.STAMaxBox.setValue(15)
        elif self.PwrSettingChoice.currentText() == "Godly Power":
            self.HTCurBox.setValue(20)
            self.HTMaxBox.setValue(20) # type: ignore
            self.STACurBox.setValue(20) # type: ignore
            self.STAMaxBox.setValue(20)
        elif self.PwrSettingChoice.currentText() == "Custom Setting":
            #Pop a dialogue, asking for the beginning stats
            self.HTCurBox.setValue()
            self.HTMaxBox.setValue()  # type: ignore
            self.STACurBox.setValue()  # type: ignore
            self.STAMaxBox.setValue()

    #TODO: Make this better? range() makes it crash, while loops with ifs make it crash.
    def calculatetheshitz(self, value):
        curLvl = self.LvlBox.value()
        #limitXP = 160500  # The sum total of all EXP needed between 0 and 20
        """lvlLimits = [100, 200, 300, 400, 500,
                      600, 700, 800, 900, 1000,
                      11000, 12000, 13000, 14000, 15000,
                      16000, 17000, 18000, 19000, 20000]"""
        awardTP = self.TPBox.value()
        awardHP = self.HeroBox.value()

        if self.XPBox.value() == 100 and curLvl == 0:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
            awardHP += 1
        elif self.XPBox.value() == 200 and curLvl == 1:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
        elif self.XPBox.value() == 300 and curLvl == 2:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
            awardHP += 1
            if self.HeroBox.value() != '0':
                self.HeroBox.setValue(awardHP)
            elif self.HeroBox.value() == '3':
                self.HeroBox.value(3)
                print("Naughty naughty!")
            else:
                leftoverHP = self.HeroBox.value()
                totHP = leftoverHP + awardHP
                self.HeroBox.setValue(totHP)
        elif self.XPBox.value() == 400 and curLvl == 3:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
        elif self.XPBox.value() == 500 and curLvl == 4:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
        elif self.XPBox.value() == 600 and curLvl == 5:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
            awardHP += 1
            if self.HeroBox.value() != '0':
                self.HeroBox.setValue(awardHP)
            elif self.HeroBox.value() == '3':
                self.HeroBox.value(3)
                print("Naughty naughty!")
            else:
                leftoverHP = self.HeroBox.value()
                totHP = leftoverHP + awardHP
                self.HeroBox.setValue(totHP)
        elif self.XPBox.value() == 700 and curLvl == 6:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
            if self.HeroBox.value() != '0':
                self.HeroBox.setValue(awardHP)
            elif self.HeroBox.value() != '3':
                self.HeroBox.setValue(3)
                print("Naughty naughty!")
            else:
                leftoverHP = self.HeroBox.value()
                totHP = leftoverHP + awardHP
                self.HeroBox.setValue(totHP)
            awardHP += 1
        elif self.XPBox.value() == 800 and curLvl == 7:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
        elif self.XPBox.value() == 900 and curLvl == 8:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
            awardHP += 1
            if self.HeroBox.value() != '0':
                self.HeroBox.setValue(awardHP)
            elif self.HeroBox.value() == '3':
                self.HeroBox.value(3)
                print("Naughty naughty!")
            else:
                leftoverHP = self.HeroBox.value()
                totHP = leftoverHP + awardHP
                self.HeroBox.setValue(totHP)
        elif self.XPBox.value() == 1000 and curLvl == 9:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
            if self.HeroBox.value() != '0':
                self.HeroBox.setValue(awardHP)
            elif self.HeroBox.value() != '3':
                self.HeroBox.setValue(3)
                print("Naughty naughty!")
            else:
                leftoverHP = self.HeroBox.value()
                totHP = leftoverHP + awardHP
                self.HeroBox.setValue(totHP)
            awardHP += 1
        elif self.XPBox.value() == 1100 and curLvl == 10:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
        elif self.XPBox.value() == 1200 and curLvl == 11:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
            awardHP += 1
            if self.HeroBox.value() != '0':
                self.HeroBox.setValue(awardHP)
            elif self.HeroBox.value() == '3':
                self.HeroBox.value(3)
                print("Naughty naughty!")
            else:
                leftoverHP = self.HeroBox.value()
                totHP = leftoverHP + awardHP
                self.HeroBox.setValue(totHP)
        elif self.XPBox.value() == 1300 and curLvl == 12:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
            if self.HeroBox.value() != '0':
                self.HeroBox.setValue(awardHP)
            elif self.HeroBox.value() != '3':
                self.HeroBox.setValue(3)
                print("Naughty naughty!")
            else:
                leftoverHP = self.HeroBox.value()
                totHP = leftoverHP + awardHP
                self.HeroBox.setValue(totHP)
            awardHP += 1
        elif self.XPBox.value() == 1400 and curLvl == 13:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
        elif self.XPBox.value() == 1500 and curLvl == 14:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
            awardHP += 1
            if self.HeroBox.value() != '0':
                self.HeroBox.setValue(awardHP)
            elif self.HeroBox.value() == '3':
                self.HeroBox.value(3)
                print("Naughty naughty!")
            else:
                leftoverHP = self.HeroBox.value()
                totHP = leftoverHP + awardHP
                self.HeroBox.setValue(totHP)
        elif self.XPBox.value() == 1600 and curLvl == 15:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
            if self.HeroBox.value() != '0':
                self.HeroBox.setValue(awardHP)
            elif self.HeroBox.value() != '3':
                self.HeroBox.setValue(3)
                print("Naughty naughty!")
            else:
                leftoverHP = self.HeroBox.value()
                totHP = leftoverHP + awardHP
                self.HeroBox.setValue(totHP)
            awardHP += 1
        elif self.XPBox.value() == 1700 and curLvl == 16:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
        elif self.XPBox.value() == 1800 and curLvl == 17:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
            awardHP += 1
            if self.HeroBox.value() != '0':
                self.HeroBox.setValue(awardHP)
            elif self.HeroBox.value() == '3':
                self.HeroBox.value(3)
                print("Naughty naughty!")
            else:
                leftoverHP = self.HeroBox.value()
                totHP = leftoverHP + awardHP
                self.HeroBox.setValue(totHP)
        elif self.XPBox.value() == 1900 and curLvl == 18:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)
            if self.HeroBox.value() != '0':
                self.HeroBox.setValue(awardHP)
            elif self.HeroBox.value() != '3':
                self.HeroBox.setValue(3)
                print("Naughty naughty!")
            else:
                leftoverHP = self.HeroBox.value()
                totHP = leftoverHP + awardHP
                self.HeroBox.setValue(totHP)
            awardHP += 1
        elif self.XPBox.value() == 2000 and curLvl == 19:
            self.LvlBox.setValue(curLvl)
            curLvl += 1
            print("Current Level:",  curLvl)
            self.LvlBox.setValue(curLvl)

            if self.TPBox.value() != '0':
                self.TPBox.setValue(awardTP)
            else:
                leftoverTP = self.TPBox.value()
                totTP = leftoverTP + awardTP
                self.TPBox.setValue(totTP)
            awardTP += 2
            print("Current TP Total:", awardTP)
            self.TPBox.setValue(awardTP)
            self.XPBox.setValue(0)

    # TODO: Make this better? Maybe some logic to prevent errors?
    def skillCalAGL(self):
            addini = 0
            adddef = 0
            oldini = 0
            olddef = 0
            totini = 0
            totdef = 0

            if self.UnpwrScoreAGL.value() == 11:
                oldini = self.IniBox.value()
                addini = 1
                totini = oldini + addini
                self.IniBox.setValue(totini)
            elif self.UnpwrScoreAGL.value() == 12:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 1
                adddef = 1
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.UnpwrScoreAGL.value() == 13:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 2
                adddef = 1
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.UnpwrScoreAGL.value() == 14:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 2
                adddef = 2
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.UnpwrScoreAGL.value() == 15:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 3
                adddef = 2
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
    def skillCalPwrAGL(self):
            addini = 0
            adddef = 0
            oldini = 0
            olddef = 0
            totini = 0
            totdef = 0
            if self.PwrScoreAGL.value() == 16:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 3
                adddef = 3
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 17:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 4
                adddef = 3
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 18:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 4
                adddef = 4
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 19:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 5
                adddef = 4
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 20:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 5
                adddef = 5
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 21:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 6
                adddef = 5
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 22:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 6
                adddef = 6
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 23:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 7
                adddef = 6
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 24:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 7
                adddef = 7
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 25:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 8
                adddef = 7
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 26:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 8
                adddef = 8
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 27:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 9
                adddef = 8
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 28:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 9
                adddef = 9
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 29:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 10
                adddef = 9
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreAGL.value() == 30:
                oldini = self.IniBox.value()
                olddef = self.DefBox.value()
                addini = 15
                adddef = 10
                totini = oldini + addini
                totdef = olddef + adddef
                self.IniBox.setValue(totini)
                self.DefBox.setValue(totdef)

    # TODO: Make this better? Maybe some logic to prevent errors?
    def skillcalsCHA(self):
            oldCHA = self.InspBox.value()
            addInsp = 0
            if self.UnpwrScoreCharisma.value() == 12 or 13 or 14:
                oldCHA = self.InspBox.value()
                addInsp = 1
                totInsp = oldCHA + addInsp
                self.InspBox.setValue(totInsp)
            elif self.UnpwrScoreCharisma.value() == 15:
                oldCHA = self.InspBox.value()
                addInsp = 2
                totInsp = oldCHA + addInsp
                self.InspBox.setValue(totInsp)
    def skillcalsPwrCHA(self):
            oldCHA = self.InspBox.value()
            addInsp = 0
            if self.PwrScoreCharisma.value() == 16 or 17 or 18 or 19:
                oldCHA = self.InspBox.value()
                addInsp = 2
                totInsp = oldCHA + addInsp
                self.InspBox.setValue(totInsp)
            elif self.PwrScoreCharisma.value() == 20 or 21 or 22 or 23 or 24:
                oldCHA = self.InspBox.value()
                addInsp = 3
                totInsp = oldCHA + addInsp
                self.InspBox.setValue(totInsp)
            elif self.PwrScoreCharisma.value() == 25 or 26 or 27 or 28 or 29:
                oldCHA = self.InspBox.value()
                addInsp = 4
                totInsp = oldCHA + addInsp
                self.InspBox.setValue(totInsp)
            elif self.PwrScoreCharisma.value() == 30:
                oldCHA = self.InspBox.value()
                addInsp = 5
                totInsp = oldCHA + addInsp
                self.InspBox.setValue(totInsp)

        # TODO: Make this better? Maybe some logic to prevent errors?
    def skillcalsINT(self):
            oldINT = self.AccBox.value()
            addINT = 0
            if self.UnpwrScoreINT.value() == 12 or 13:
                oldINT = self.AccBox.value()
                addINT = 1
                totAcc = oldINT + addINT
                self.AccBox.setValue(totAcc)
            elif self.UnpwrScoreINT.value() == 14 or 15:
                oldINT = self.AccBox.value()
                addINT = 2
                totAcc = oldINT + addINT
                self.AccBox.setValue(totAcc)
    def skillcalsPwrINT(self):
            oldINT = self.AccBox.value()
            addINT = 0
            if self.PwrScoreINT.value() == 16 or 17:
                oldINT = self.AccBox.value()
                addINT = 3
                totAcc = oldINT + addINT
                self.AccBox.setValue(totAcc)
            elif self.PwrScoreINT.value() == 18 or 19:
                oldINT = self.AccBox.value()
                addINT = 4
                totAcc = oldINT + addINT
                self.AccBox.setValue(totAcc)
            elif self.PwrScoreINT.value() == 20 or 21:
                oldINT = self.AccBox.value()
                addINT = 5
                totAcc = oldINT + addINT
                self.AccBox.setValue(totAcc)
            elif self.PwrScoreINT.value() == 22 or 23:
                oldINT = self.AccBox.value()
                addINT = 6
                totAcc = oldINT + addINT
                self.AccBox.setValue(totAcc)
            elif self.PwrScoreINT.value() == 24 or 25:
                oldINT = self.AccBox.value()
                addINT = 7
                totAcc = oldINT + addINT
                self.AccBox.setValue(totAcc)
            elif self.PwrScoreINT.value() == 26 or 27:
                oldINT = self.AccBox.value()
                addINT = 8
                totAcc = oldINT + addINT
                self.AccBox.setValue(totAcc)
            elif self.PwrScoreINT.value() == 28 or 29:
                oldINT = self.AccBox.value()
                addINT = 9
                totAcc = oldINT + addINT
                self.AccBox.setValue(totAcc)
            elif self.PwrScoreINT.value() == 30:
                oldINT = self.AccBox.value()
                addINT = 10
                totAcc = oldINT + addINT
                self.AccBox.setValue(totAcc)

        # TODO: Make this better? Maybe some logic to prevent errors?
    def skillcalsSEN(self):
            addacc = 0
            adddef = 0
            oldacc = 0
            olddef = 0
            totacc = 0
            totdef = 0
            if self.UnpwrScoreSenses.value() == 11:
                olddef = self.DefBox.value()
                adddef = 1
                totdef = olddef + adddef
                self.DefBox.setValue(totdef)
            elif self.UnpwrScoreSenses.value() == 12:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 1
                adddef = 1
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.UnpwrScoreSenses.value() == 13:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 1
                adddef = 2
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.UnpwrScoreSenses.value() == 14:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 2
                adddef = 2
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.UnpwrScoreSenses.value() == 15:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 2
                adddef = 3
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
    def skillcalPWRSen(self):
            addacc = 0
            adddef = 0
            oldacc = 0
            olddef = 0
            totacc = 0
            totdef = 0
            if self.PwrScoreSenses.value() == 16:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 3
                adddef = 3
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 17:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 3
                adddef = 4
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 18:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 4
                adddef = 4
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 19:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 4
                adddef = 5
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 20:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 5
                adddef = 5
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 21:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 5
                adddef = 6
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 22:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 6
                adddef = 6
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 23:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 6
                adddef = 7
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 24:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 7
                adddef = 7
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 25:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 7
                adddef = 8
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 26:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 8
                adddef = 8
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 27:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 8
                adddef = 9
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 28:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 9
                adddef = 9
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 29:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 9
                adddef = 10
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)
            elif self.PwrScoreSenses.value() == 30:
                oldacc = self.AccBox.value()
                olddef = self.DefBox.value()
                addacc = 10
                adddef = 15
                totacc = oldacc + addacc
                totdef = olddef + adddef
                self.AccBox.setValue(totacc)
                self.DefBox.setValue(totdef)

        # TODO: Make this better? Hey you remembered to take the value and put it in a variable here. Moron. @_@
        # TODO: Also an error where you can't seem to get past SPDbox index 7.
        # TODO: REDO THE COMBOBOX! MESSES UP AT 4 and isn't the right index for 5.
    def skillcalsSPD(self):
            self.UnpwrScoreSPD.value()
            oldIni = self.IniBox.value()
            addIni = 0
            totIni = 0
            if self.UnpwrScoreSPD.value() in range(1, 4):
                self.SPDBox.setCurrentIndex(0)
            elif self.UnpwrScoreSPD.value() in range(5, 8):
                self.SPDBox.setCurrentIndex(1)
            elif self.UnpwrScoreSPD.value() in range(9, 12):
                self.SPDBox.setCurrentIndex(2)
                if self.UnpwrScoreSPD.value() == 11:
                    addIni = 1
                    totIni = oldIni + addIni
                    self.IniBox.setvalue(totIni)
                elif self.UnpwrScoreSPD.value() == 12:
                    addIni = 2
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
            elif self.UnpwrScoreSPD.value() == 13:
                self.SPDBox.setCurrentIndex(3)
                addIni = 3
                totIni = oldIni + addIni
                self.IniBox.setValue(totIni)
            elif self.UnpwrScoreSPD.value() == 14 or 15:
                self.SPDBox.setCurrentIndex(4)
                if self.UnpwrScoreSPD.value() == 14:
                    addIni = 4
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
                elif self.UnpwrScoreSPD.value() == 15:
                    addIni = 5
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
    def skillcalsPwrSPD(self):  # You rabid fucking moron. Assign value to the variable. GEEZ!
            SPD = self.PwrScoreSPD.value()
            oldIni = self.IniBox.value()
            addIni = 0
            totIni = 0
            if SPD == 16:
                self.SPDBox.setCurrentIndex(5)
                addIni = 6
                totIni = oldIni + addIni
                self.IniBox.setValue(totIni)
            elif SPD == 17:
                self.SPDBox.setCurrentIndex(6)
                addIni = 7
                totIni = oldIni + addIni
                self.IniBox.setValue(totIni)
            elif SPD == 18 or 19:
                self.SPDBox.setCurrentIndex(7)
                if SPD == 18:
                    addIni = 8
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
                elif SPD == 19:
                    addIni = 9
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
            elif SPD == 20 or 21:  # Not getting here. Fix this.
                self.SPDBox.setCurrentIndex(8)
                if SPD == 20:
                    addIni = 10
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
                elif SPD == 21:
                    addIni = 11
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
            elif SPD == 22 or 23:
                self.SPDBox.setCurrentIndex(9)
                if SPD == 22:
                    addIni = 12
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
                elif SPD == 23:
                    addIni = 13
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
            elif SPD == 24 or 25:
                self.SPDBox.setCurrentIndex(10)
                if SPD == 24:
                    addIni = 14
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
                elif SPD == 25:
                    addIni = 15
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
            elif SPD == 26 or 27:
                self.SPDBox.setCurrentIndex(11)
                if SPD == 26:
                    addIni = 16
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
                elif SPD == 27:
                    addIni = 17
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
            elif SPD == 28 or 29:
                self.SPDBox.setCurrentIndex(12)
                if SPD == 28:
                    addIni = 18
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
                elif SPD == 29:
                    addIni = 19
                    totIni = oldIni + addIni
                    self.IniBox.setValue(totIni)
            elif SPD == 30:
                self.SPDBox.setCurrentIndex(13)
                addIni = 20
                totIni = oldIni + addIni
                self.IniBox.setValue(totIni)

        # TODO: Make this better?
    def skillcalsSTA(self):
            addHT = 0
            oldHT = self.HTCurBox.value()
            STA = self.UnpwrScoreStamina.value()
            oldCurSP = self.STACurBox.value()
            oldMaxSP = self.STAMaxBox.value()

            if STA == 10:
                addHT = 1
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 11:
                addHT = 2
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 12:
                addHT = 3
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 13:
                addHT = 4
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 14:
                addHT = 5
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 15:
                addHT = 6
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
    def skillcalsPwrSTA(self):
            STA = self.PwrScoreStamina.value()
            addHT = 0
            oldHT = self.HTCurBox.value()
            STA = self.UnpwrScoreStamina.value()
            oldCurSP = self.STACurBox.value()
            oldMaxSP = self.STAMaxBox.value()

            if STA == 16:
                addHT = 7
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 17:
                addHT = 8
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 18:
                addHT = 9
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 19:
                addHT = 10
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 20:
                addHT = 11
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 21:
                addHT = 12
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 22:
                addHT = 13
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 23:
                addHT = 14
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 24:
                addHT = 15
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 25:
                addHT = 16
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 26:
                addHT = 17
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 27:
                addHT = 18
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 28:
                addHT = 19
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 29:
                addHT = 20
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
            elif STA == 30:
                addHT = 25
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)

        # TODO: Make this better? Need to sort out the HtH dice boxes.
    def skillcalsSTR(self):
            STR = self.UnpwrScoreSTR.value()
            addHT = 0
            oldHT = self.HTMaxBox.value()

            if STR == range(1, 9):
                if STR == 1:
                    self.LiftBox.setCurrentIndex(0)
                elif STR == 2:
                    self.LiftBox.setCurrentIndex(1)
                elif STR == 3:
                    self.LiftBox.setCurrentIndex(2)
                    # HTH 1
                elif STR == 4:
                    self.LiftBox.setCurrentIndex(3)
                    # HTH 1
                elif STR == 5:
                    self.LiftBox.setCurrentIndex(4)
                    # HTH 1
                elif STR == 6:
                    self.LiftBox.setCurrentIndex(5)
                    # HTH 1
                elif STR == 7:
                    self.LiftBox.setCurrentIndex(6)
                    # HTH 1
                elif STR == 8:
                    self.LiftBox.setCurrentIndex(7)
                    # HTH 1d4
                elif STR == 9:
                    self.LiftBox.setCurrentIndex(8)
                    # HTH 1d4
            elif STR == 10:
                addHT = 1
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
                self.LiftBox.setCurrentIndex(9)
                # HTH 1d4+1
            elif STR == 11:
                addHT = 2
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
                self.LiftBox.setCurrentIndex(10)
                # HTH 1d6
            elif STR == 12:
                addHT = 3
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
                self.LiftBox.setCurrentIndex(11)
                # HTH 1d6+1
            elif STR == 13:
                addHT = 4
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
                self.LiftBox.setCurrentIndex(12)
                # HTH 1d8
            elif STR == 14:
                addHT = 5
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
                self.LiftBox.setCurrentIndex(13)
                # HTH 1d8+1
            elif STR == 15:
                addHT = 6
                newHT = oldHT + addHT
                self.HTCurBox.setValue(newHT)
                self.HTMaxBox.setValue(newHT)
                self.LiftBox.setCurrentIndex(14)
                # HTH 1d10
    def skillcalsPwrSTR(self):
            try:
                STR = self.PwrScoreSTR.value()
                addHT = 0
                oldHT = self.HTMaxBox.value()

                if STR == 16:
                    addHT = 7
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(15)
                    # HTH 1d10+1
                elif STR == 17:
                    addHT = 8
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(16)
                    # HTH 1d10+2
                elif STR == 18:
                    addHT = 9
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(17)
                    # HTH 1d10+3
                elif STR == 19:
                    addHT = 10
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(18)
                    # HTH 1d10+4
                elif STR == 20:
                    addHT = 11
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(19)
                    # HTH 2d10
                elif STR == 21:
                    addHT = 12
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(20)
                    # HTH 2d10+1
                elif STR == 22:
                    addHT = 13
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(21)
                    # HTH 2d10+2
                elif STR == 23:
                    addHT = 14
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(22)
                    # HTH 2d10+3
                elif STR == 24:
                    addHT = 15
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(23)
                    # HTH 2d10+4
                elif STR == 25:
                    addHT = 16
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(24)
                    # HTH 3d10
                elif STR == 26:
                    addHT = 17
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(25)
                    # HTH 3d10+1
                elif STR == 27:
                    addHT = 18
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(26)
                    # HTH 3d10+2
                elif STR == 28:
                    addHT = 19
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(27)
                    # HTH 3d10+3
                elif STR == 29:
                    addHT = 20
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(28)
                    # HTH 3d10+4
                elif STR == 30:
                    addHT = 25
                    newHT = oldHT + addHT
                    self.HTCurBox.setValue(newHT)
                    self.HTMaxBox.setValue(newHT)
                    self.LiftBox.setCurrentIndex(29)
                    # HTH 3d10+5
            except:
                print("Something went wrong with the Powered Strength Calculation")

    #TODO: Make the confirmation dialogue work?
    def confirmationBox(self):
        Qbtn = QDialogButtonBox.Ok | QDialogButtonBox.Cancel
        self.buttonBox = QDialogButtonBox(Qbtn)
        self.buttonBox.accepted.connect(self.accept)
        self.buttonBox.rejected.connect(self.reject)

        self.layout = QVBoxLayout()
        message = QtWidgets.Qlabel("Do you want to save this selection?")
        self.layout.addWidget(message)
        self.layout.addWidget(self.buttonBox)
        self.setLayout(self.layout)

    def EventFilter(self, object, event):
        if event.type() == QKeyEvent.KeyPress and event.key() == Qt.Key_Return:
            value = self.XPBox.value()
            self.calculatetheshitz(value)
            return True
        return False

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Legends A Superhero RolePlay"))
        self.AbilitiesPad.setHtml(_translate("MainWindow",
                                             "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                             "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                             "p, li { white-space: pre-wrap; }\n"
                                             "</style></head><body style=\" font-family:\'Helvetica\'; font-size:10pt; font-weight:600; font-style:normal;\">\n"
                                             "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8.25pt;\"><br /></p></body></html>"))
        self.AbilitiesPad.setPlaceholderText(
            _translate("MainWindow", "Type your abilities here and modifications to them."))
        self.SectionLab.setText(_translate("MainWindow", "Section C: Abilities"))
        self.LabPow.setText(_translate("MainWindow", "Section B: Powers"))
        self.PwrSearch.setPlaceholderText(_translate("MainWindow", "Search for Powers Here"))
        self.CnameLab.setText(_translate("MainWindow", "Code Name:"))
        self.LevLab.setText(_translate("MainWindow", "Level:"))
        self.CurXPLab.setText(_translate("MainWindow", "Current XP:"))
        self.TPTLab.setText(_translate("MainWindow", "Training Points:"))
        self.HPTLab.setText(_translate("MainWindow", "Hero Points:"))
        self.LnameLab.setText(_translate("MainWindow", "Legal Name:"))
        self.PnounLab.setText(_translate("MainWindow", "Pronouns:"))
        self.PsettingLab.setText(_translate("MainWindow", "Power Setting:"))
        self.DividermarkLab.setText(_translate("MainWindow", "/"))
        self.PwrSettingChoice.setItemText(0, _translate("MainWindow", "Select Power Setting"))
        self.PwrSettingChoice.setItemText(1, _translate("MainWindow", "Low Power"))
        self.PwrSettingChoice.setItemText(2, _translate("MainWindow", "Medium Power"))
        self.PwrSettingChoice.setItemText(3, _translate("MainWindow", "High Power"))
        self.PwrSettingChoice.setItemText(4, _translate("MainWindow", "Godly Power"))
        self.SecElab.setText(_translate("MainWindow", "Section E: Combat Attributes"))
        self.label.setText(_translate("MainWindow", "Stamina Points:"))
        self.HTPTLab.setText(_translate("MainWindow", "Hit Points:"))
        self.CurLab.setText(_translate("MainWindow", "Current"))
        self.label_4.setText(_translate("MainWindow", "Maximum"))
        self.label_6.setText(_translate("MainWindow", "Armour Points:"))
        self.HtHLab.setText(_translate("MainWindow", "Hand to Hand Damage:"))
        self.RecLab.setText(_translate("MainWindow", "Recoveries:"))
        self.HtHModBox.setItemText(1, _translate("MainWindow", "+1"))
        self.HtHModBox.setItemText(2, _translate("MainWindow", "+2"))
        self.HtHModBox.setItemText(3, _translate("MainWindow", "+3"))
        self.HtHModBox.setItemText(4, _translate("MainWindow", "+4"))
        self.HtHModBox.setItemText(5, _translate("MainWindow", "+5"))
        self.InsLab.setText(_translate("MainWindow", "Inspiration Bonus:"))
        self.label_8.setText(_translate("MainWindow", "Accuracy Bonus:"))
        self.InitLab.setText(_translate("MainWindow", "Initiative Score:"))
        self.dLab.setText(_translate("MainWindow", "d"))
        self.label_7.setText(_translate("MainWindow", "Defense Score:"))
        self.SpdLab.setText(_translate("MainWindow", "Top Speed:"))
        self.MaxLiftLab.setText(_translate("MainWindow", "Maximum Lift:"))
        self.SPDBox.setItemText(0, _translate("MainWindow", "20 km/h or 12 mph"))
        self.SPDBox.setItemText(1, _translate("MainWindow", "30 km/h or 18 mph"))
        self.SPDBox.setItemText(2, _translate("MainWindow", "35 km/h or 22 mph"))
        self.SPDBox.setItemText(3, _translate("MainWindow", "40 km/h or 25 mph"))
        self.SPDBox.setItemText(4, _translate("MainWindow", "60 km/h or 37 mph"))
        self.SPDBox.setItemText(5, _translate("MainWindow", "65 km/h or 40 mph"))
        self.SPDBox.setItemText(6, _translate("MainWindow", "75 km/h or 46 mph"))
        self.SPDBox.setItemText(7, _translate("MainWindow", "80 km/h or 50 mph"))
        self.SPDBox.setItemText(8, _translate("MainWindow", "90 km/h or 56 mph"))
        self.SPDBox.setItemText(9, _translate("MainWindow", "100 km/h or 62 mph"))
        self.SPDBox.setItemText(10, _translate("MainWindow", "110 km/h or 68 mph"))
        self.SPDBox.setItemText(11, _translate("MainWindow", "115 km/h or 72 mph"))
        self.SPDBox.setItemText(12, _translate("MainWindow", "120 km/h or 75 mph"))
        self.LiftBox.setItemText(0, _translate("MainWindow", "5 kilograms or 11 pounds"))
        self.LiftBox.setItemText(1, _translate("MainWindow", "10 kilograms or 20 pounds"))
        self.LiftBox.setItemText(2, _translate("MainWindow", "20 kilograms or 44 pounds"))
        self.LiftBox.setItemText(3, _translate("MainWindow", "30 kilograms or 66 pounds"))
        self.LiftBox.setItemText(4, _translate("MainWindow", "40 kilograms or 88 pounds"))
        self.LiftBox.setItemText(5, _translate("MainWindow", "50 kilograms or 110 pounds"))
        self.LiftBox.setItemText(6, _translate("MainWindow", "60 kilograms or 132 pounds"))
        self.LiftBox.setItemText(7, _translate("MainWindow", "70 kilograms or 154 pounds"))
        self.LiftBox.setItemText(8, _translate("MainWindow", "80 kilograms or 176 pounds"))
        self.LiftBox.setItemText(9, _translate("MainWindow", "90 kilograms or 198 pounds"))
        self.LiftBox.setItemText(10, _translate("MainWindow", "100 kilograms or 220 pounds"))
        self.LiftBox.setItemText(11, _translate("MainWindow", "200 kilograms or 440 pounds"))
        self.LiftBox.setItemText(12, _translate("MainWindow", "300 kilograms or 661 pounds"))
        self.LiftBox.setItemText(13, _translate("MainWindow", "400 kilograms or 882 pounds"))
        self.LiftBox.setItemText(14, _translate("MainWindow", "500 kilograms or 1102 pounds"))
        self.LiftBox.setItemText(15, _translate("MainWindow", "1000 kilograms or 2205 pounds"))
        self.LiftBox.setItemText(16, _translate("MainWindow", "2000 kilograms or 4409 pounds"))
        self.LiftBox.setItemText(17, _translate("MainWindow", "3000 kilograms or 6614 pounds"))
        self.LiftBox.setItemText(18, _translate("MainWindow", "4000 kilograms or 8818 pounds"))
        self.LiftBox.setItemText(19, _translate("MainWindow", "5000 kilograms or 11023 pounds"))
        self.LiftBox.setItemText(20, _translate("MainWindow", "6000 kilograms or 13228 pounds"))
        self.LiftBox.setItemText(21, _translate("MainWindow", "7000 kilograms or 15432 pounds"))
        self.LiftBox.setItemText(22, _translate("MainWindow", "8000 kilograms or 17637 pounds"))
        self.LiftBox.setItemText(23, _translate("MainWindow", "9000 kilograms or 19842 pounds"))
        self.LiftBox.setItemText(24, _translate("MainWindow", "10K kilograms or 22K pounds"))
        self.LiftBox.setItemText(25, _translate("MainWindow", "15K kilograms or 33K pounds"))
        self.LiftBox.setItemText(26, _translate("MainWindow", "20K kilograms or 44K pounds"))
        self.LiftBox.setItemText(27, _translate("MainWindow", "30K kilograms or 66K pounds"))
        self.LiftBox.setItemText(28, _translate("MainWindow", "40K kilograms or 88K pounds"))
        self.LiftBox.setItemText(29, _translate("MainWindow", "50K kilograms or 110K pounds"))
        self.label_3.setText(_translate("MainWindow", "Section D: Skills"))
        self.SPDLab.setText(_translate("MainWindow", "Speed:"))
        self.SenseLab.setText(_translate("MainWindow", "Senses:"))
        self.SkillLab.setText(_translate("MainWindow", "Skills"))
        self.AGLLab.setText(_translate("MainWindow", "Agility:"))
        self.INTLab.setText(_translate("MainWindow", "Intelligence:"))
        self.STALab.setText(_translate("MainWindow", "Stamina:"))
        self.CharismaLab.setText(_translate("MainWindow", "Charisma:"))
        self.PoweredLab.setText(_translate("MainWindow", "Powered"))
        self.UnpwrLab.setText(_translate("MainWindow", "Unpowered"))
        self.STRLab.setText(_translate("MainWindow", "Strength:"))
        self.UnpwrScoreAGL.setToolTip(_translate("MainWindow", "Can only go up to 15"))
        self.UnpwrScoreCharisma.setToolTip(_translate("MainWindow", "Can only go up to 15"))
        self.UnpwrScoreINT.setToolTip(_translate("MainWindow", "Can only go up to 15"))
        self.UnpwrScoreSenses.setToolTip(_translate("MainWindow", "Can only go up to 15"))
        self.UnpwrScoreSPD.setToolTip(_translate("MainWindow", "Can only go up to 15"))
        self.UnpwrScoreStamina.setToolTip(_translate("MainWindow", "Can only go up to 15"))
        self.UnpwrScoreSTR.setToolTip(_translate("MainWindow", "Can only go up to 15"))
        self.PwrScoreAGL.setToolTip(_translate("MainWindow", "Can only go up to 30"))
        self.PwrScoreCharisma.setToolTip(_translate("MainWindow", "Can only go up to 30"))
        self.PwrScoreINT.setToolTip(_translate("MainWindow", "Can only go up to 30"))
        self.PwrScoreSenses.setToolTip(_translate("MainWindow", "Can only go up to 30"))
        self.PwrScoreSPD.setToolTip(_translate("MainWindow", "Can only go up to 30"))
        self.PwrScoreStamina.setToolTip(_translate("MainWindow", "Can only go up to 30"))
        self.PwrScoreSTR.setToolTip(_translate("MainWindow", "Can only go up to 30"))
        self.label_5.setText(_translate("MainWindow", "Section F: Durability"))
        self.EditButton.setText(_translate("MainWindow", "Edit Hero"))
        self.NewHeroButton.setText(_translate("MainWindow", "New Hero"))
        self.ExitButton.setText(_translate("MainWindow", "Exit"))
        self.DiceRollerButton.setText(_translate("MainWindow", "Dice Roller"))
        self.RuleBookButton.setText(_translate("MainWindow", "Rule Book"))
        self.LoadButton.setText(_translate("MainWindow", "Load Hero"))
        self.SaveButton.setText(_translate("MainWindow", "Save Hero"))
        self.SonicLab.setText(_translate("MainWindow", "Sonic:"))
        self.FireLab.setText(_translate("MainWindow", "Fire:"))
        self.ForceFieldsLab.setText(_translate("MainWindow", "Force Fields:"))
        self.LightningLab.setText(_translate("MainWindow", "Lightning:"))
        self.LightLab.setText(_translate("MainWindow", "Light:"))
        self.PierceLab.setText(_translate("MainWindow", "Piercing:"))
        self.IceLab.setText(_translate("MainWindow", "Ice:"))
        self.PsyLab.setText(_translate("MainWindow", "Psychic:"))
        self.SlashLab.setText(_translate("MainWindow", "Slashing:"))
        self.PWRLab.setText(_translate("MainWindow", "Power:"))
        self.PSNLab.setText(_translate("MainWindow", "Poison:"))
        self.ResistLab.setText(_translate("MainWindow", "Resistant"))
        self.BluntLab.setText(_translate("MainWindow", "Blunt:"))
        self.FallLab.setText(_translate("MainWindow", "Fall:"))
        self.DisrupLab.setText(_translate("MainWindow", "Disruption:"))
        self.EarthLab.setText(_translate("MainWindow", "Earth:"))
        self.TypeLab.setText(_translate("MainWindow", "Damage Type"))
        self.InVulLab.setText(_translate("MainWindow", "Invulnerable"))

    def exitprogram(self):
        sys.exit(app.exec_())

    def newprogram(self):
        self.Cname.clear()
        self.Lname.clear()
        self.Pronoun1.clear()
        self.Pnoun2.clear()
        self.LiftBox.setCurrentIndex(0)

if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    app.setWindowIcon(QtGui.QIcon('D:\CharacterSheets\Characters\legends.ico'))
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
